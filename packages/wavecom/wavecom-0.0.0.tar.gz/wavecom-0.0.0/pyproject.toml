[build-system] 
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wavecom"
description = "Wavecom python common tooling"
requires-python = ">=3.11"
authors = [
    { name = "Informatica", email = "informatica@wavesys.pt" },
]
dependencies = [ # leave version constrains to consumming application. 

]
dynamic = ["version"]

[project.optional-dependencies]
dev = [

]
docs = [
]

[project.scripts]
wavepy = "wavecom._main:main"

[tool.hatch.version]
path = "wavecom/__init__.py"

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["."] by default)
include = ["*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["tests*", "examples*", "docs*"]  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # false to disable scanning PEP 420 namespaces (true by default) (resource: https://www.youtube.com/watch?v=2Xvb79hOUdM)

[tool.black]
line-length = 79
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 79
src_paths = ["wavecom", "tests"]
add_imports = ["from __future__ import annotations"]

[tool.mypy]
python_version = "3.11"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
asyncio_mode = "strict"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["wavecom"]
omit = [
    "venv/*",
    ".venv/*",
    "tests/*"
]

[tool.coverage.report]
show_missing = true
fail_under = 0

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__"
]

# same as Black.
line-length = 88

# allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# assume python version.
target-version = "py311"

[tool.ruff.mccabe]
# unlike Flake8, default to a complexity level of 10.
max-complexity = 10