# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
from . import grpc

from . import ingestion_pb2 as ingestion__pb2


class IGSWorkerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CommitTablet = channel.unary_unary(
                '/cz.proto.ingestion.IGSWorkerService/CommitTablet',
                request_serializer=ingestion__pb2.CommitTabletRequest.SerializeToString,
                response_deserializer=ingestion__pb2.CommitTabletResponse.FromString,
                )
        self.Mutate = channel.stream_stream(
                '/cz.proto.ingestion.IGSWorkerService/Mutate',
                request_serializer=ingestion__pb2.DataMutateRequest.SerializeToString,
                response_deserializer=ingestion__pb2.DataMutateResponse.FromString,
                )
        self.Broadcast = channel.unary_unary(
                '/cz.proto.ingestion.IGSWorkerService/Broadcast',
                request_serializer=ingestion__pb2.BroadcastRequest.SerializeToString,
                response_deserializer=ingestion__pb2.BroadcastResponse.FromString,
                )
        self.MutateInternal = channel.unary_unary(
                '/cz.proto.ingestion.IGSWorkerService/MutateInternal',
                request_serializer=ingestion__pb2.DataMutateRequestInternal.SerializeToString,
                response_deserializer=ingestion__pb2.DataMutateResponse.FromString,
                )


class IGSWorkerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CommitTablet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Mutate(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Broadcast(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MutateInternal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IGSWorkerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CommitTablet': grpc.unary_unary_rpc_method_handler(
                    servicer.CommitTablet,
                    request_deserializer=ingestion__pb2.CommitTabletRequest.FromString,
                    response_serializer=ingestion__pb2.CommitTabletResponse.SerializeToString,
            ),
            'Mutate': grpc.stream_stream_rpc_method_handler(
                    servicer.Mutate,
                    request_deserializer=ingestion__pb2.DataMutateRequest.FromString,
                    response_serializer=ingestion__pb2.DataMutateResponse.SerializeToString,
            ),
            'Broadcast': grpc.unary_unary_rpc_method_handler(
                    servicer.Broadcast,
                    request_deserializer=ingestion__pb2.BroadcastRequest.FromString,
                    response_serializer=ingestion__pb2.BroadcastResponse.SerializeToString,
            ),
            'MutateInternal': grpc.unary_unary_rpc_method_handler(
                    servicer.MutateInternal,
                    request_deserializer=ingestion__pb2.DataMutateRequestInternal.FromString,
                    response_serializer=ingestion__pb2.DataMutateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cz.proto.ingestion.IGSWorkerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IGSWorkerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CommitTablet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSWorkerService/CommitTablet',
            ingestion__pb2.CommitTabletRequest.SerializeToString,
            ingestion__pb2.CommitTabletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Mutate(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/cz.proto.ingestion.IGSWorkerService/Mutate',
            ingestion__pb2.DataMutateRequest.SerializeToString,
            ingestion__pb2.DataMutateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Broadcast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSWorkerService/Broadcast',
            ingestion__pb2.BroadcastRequest.SerializeToString,
            ingestion__pb2.BroadcastResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MutateInternal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSWorkerService/MutateInternal',
            ingestion__pb2.DataMutateRequestInternal.SerializeToString,
            ingestion__pb2.DataMutateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class IGSWorkerInternalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FlushTablet = channel.unary_unary(
                '/cz.proto.ingestion.IGSWorkerInternalService/FlushTablet',
                request_serializer=ingestion__pb2.FlushTabletRequest.SerializeToString,
                response_deserializer=ingestion__pb2.FlushTabletResponse.FromString,
                )


class IGSWorkerInternalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FlushTablet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IGSWorkerInternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FlushTablet': grpc.unary_unary_rpc_method_handler(
                    servicer.FlushTablet,
                    request_deserializer=ingestion__pb2.FlushTabletRequest.FromString,
                    response_serializer=ingestion__pb2.FlushTabletResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cz.proto.ingestion.IGSWorkerInternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IGSWorkerInternalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FlushTablet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSWorkerInternalService/FlushTablet',
            ingestion__pb2.FlushTabletRequest.SerializeToString,
            ingestion__pb2.FlushTabletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class IGSControllerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GatewayRpcCall = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/GatewayRpcCall',
                request_serializer=ingestion__pb2.GatewayRequest.SerializeToString,
                response_deserializer=ingestion__pb2.GatewayResponse.FromString,
                )
        self.GetTableMeta = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/GetTableMeta',
                request_serializer=ingestion__pb2.GetTableMetaRequest.SerializeToString,
                response_deserializer=ingestion__pb2.GetTableMetaResponse.FromString,
                )
        self.CreateTablet = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/CreateTablet',
                request_serializer=ingestion__pb2.ControllerCreateTabletRequest.SerializeToString,
                response_deserializer=ingestion__pb2.CreateTabletResponse.FromString,
                )
        self.CommitTablet = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/CommitTablet',
                request_serializer=ingestion__pb2.CommitTabletRequest.SerializeToString,
                response_deserializer=ingestion__pb2.CommitTabletResponse.FromString,
                )
        self.DropTablet = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/DropTablet',
                request_serializer=ingestion__pb2.DropTabletRequest.SerializeToString,
                response_deserializer=ingestion__pb2.DropTabletResponse.FromString,
                )
        self.GetMutateWorkers = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/GetMutateWorkers',
                request_serializer=ingestion__pb2.GetMutateWorkersRequest.SerializeToString,
                response_deserializer=ingestion__pb2.GetMutateWorkersResponse.FromString,
                )
        self.CheckTableExists = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/CheckTableExists',
                request_serializer=ingestion__pb2.CheckTableExistsRequest.SerializeToString,
                response_deserializer=ingestion__pb2.CheckTableExistsResponse.FromString,
                )
        self.CreateBulkloadStream = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/CreateBulkloadStream',
                request_serializer=ingestion__pb2.CreateBulkloadStreamRequest.SerializeToString,
                response_deserializer=ingestion__pb2.CreateBulkloadStreamResponse.FromString,
                )
        self.GetBulkloadStream = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/GetBulkloadStream',
                request_serializer=ingestion__pb2.GetBulkloadStreamRequest.SerializeToString,
                response_deserializer=ingestion__pb2.GetBulkloadStreamResponse.FromString,
                )
        self.CommitBulkloadStream = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/CommitBulkloadStream',
                request_serializer=ingestion__pb2.CommitBulkloadStreamRequest.SerializeToString,
                response_deserializer=ingestion__pb2.CommitBulkloadStreamResponse.FromString,
                )
        self.OpenBulkloadStreamWriter = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/OpenBulkloadStreamWriter',
                request_serializer=ingestion__pb2.OpenBulkloadStreamWriterRequest.SerializeToString,
                response_deserializer=ingestion__pb2.OpenBulkloadStreamWriterResponse.FromString,
                )
        self.FinishBulkloadStreamWriter = channel.unary_unary(
                '/cz.proto.ingestion.IGSControllerService/FinishBulkloadStreamWriter',
                request_serializer=ingestion__pb2.FinishBulkloadStreamWriterRequest.SerializeToString,
                response_deserializer=ingestion__pb2.FinishBulkloadStreamWriterResponse.FromString,
                )


class IGSControllerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GatewayRpcCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTableMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTablet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommitTablet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropTablet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMutateWorkers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckTableExists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBulkloadStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBulkloadStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommitBulkloadStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenBulkloadStreamWriter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinishBulkloadStreamWriter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IGSControllerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GatewayRpcCall': grpc.unary_unary_rpc_method_handler(
                    servicer.GatewayRpcCall,
                    request_deserializer=ingestion__pb2.GatewayRequest.FromString,
                    response_serializer=ingestion__pb2.GatewayResponse.SerializeToString,
            ),
            'GetTableMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTableMeta,
                    request_deserializer=ingestion__pb2.GetTableMetaRequest.FromString,
                    response_serializer=ingestion__pb2.GetTableMetaResponse.SerializeToString,
            ),
            'CreateTablet': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTablet,
                    request_deserializer=ingestion__pb2.ControllerCreateTabletRequest.FromString,
                    response_serializer=ingestion__pb2.CreateTabletResponse.SerializeToString,
            ),
            'CommitTablet': grpc.unary_unary_rpc_method_handler(
                    servicer.CommitTablet,
                    request_deserializer=ingestion__pb2.CommitTabletRequest.FromString,
                    response_serializer=ingestion__pb2.CommitTabletResponse.SerializeToString,
            ),
            'DropTablet': grpc.unary_unary_rpc_method_handler(
                    servicer.DropTablet,
                    request_deserializer=ingestion__pb2.DropTabletRequest.FromString,
                    response_serializer=ingestion__pb2.DropTabletResponse.SerializeToString,
            ),
            'GetMutateWorkers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMutateWorkers,
                    request_deserializer=ingestion__pb2.GetMutateWorkersRequest.FromString,
                    response_serializer=ingestion__pb2.GetMutateWorkersResponse.SerializeToString,
            ),
            'CheckTableExists': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckTableExists,
                    request_deserializer=ingestion__pb2.CheckTableExistsRequest.FromString,
                    response_serializer=ingestion__pb2.CheckTableExistsResponse.SerializeToString,
            ),
            'CreateBulkloadStream': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBulkloadStream,
                    request_deserializer=ingestion__pb2.CreateBulkloadStreamRequest.FromString,
                    response_serializer=ingestion__pb2.CreateBulkloadStreamResponse.SerializeToString,
            ),
            'GetBulkloadStream': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBulkloadStream,
                    request_deserializer=ingestion__pb2.GetBulkloadStreamRequest.FromString,
                    response_serializer=ingestion__pb2.GetBulkloadStreamResponse.SerializeToString,
            ),
            'CommitBulkloadStream': grpc.unary_unary_rpc_method_handler(
                    servicer.CommitBulkloadStream,
                    request_deserializer=ingestion__pb2.CommitBulkloadStreamRequest.FromString,
                    response_serializer=ingestion__pb2.CommitBulkloadStreamResponse.SerializeToString,
            ),
            'OpenBulkloadStreamWriter': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenBulkloadStreamWriter,
                    request_deserializer=ingestion__pb2.OpenBulkloadStreamWriterRequest.FromString,
                    response_serializer=ingestion__pb2.OpenBulkloadStreamWriterResponse.SerializeToString,
            ),
            'FinishBulkloadStreamWriter': grpc.unary_unary_rpc_method_handler(
                    servicer.FinishBulkloadStreamWriter,
                    request_deserializer=ingestion__pb2.FinishBulkloadStreamWriterRequest.FromString,
                    response_serializer=ingestion__pb2.FinishBulkloadStreamWriterResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cz.proto.ingestion.IGSControllerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IGSControllerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GatewayRpcCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/GatewayRpcCall',
            ingestion__pb2.GatewayRequest.SerializeToString,
            ingestion__pb2.GatewayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTableMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/GetTableMeta',
            ingestion__pb2.GetTableMetaRequest.SerializeToString,
            ingestion__pb2.GetTableMetaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTablet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/CreateTablet',
            ingestion__pb2.ControllerCreateTabletRequest.SerializeToString,
            ingestion__pb2.CreateTabletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommitTablet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/CommitTablet',
            ingestion__pb2.CommitTabletRequest.SerializeToString,
            ingestion__pb2.CommitTabletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropTablet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/DropTablet',
            ingestion__pb2.DropTabletRequest.SerializeToString,
            ingestion__pb2.DropTabletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMutateWorkers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/GetMutateWorkers',
            ingestion__pb2.GetMutateWorkersRequest.SerializeToString,
            ingestion__pb2.GetMutateWorkersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckTableExists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/CheckTableExists',
            ingestion__pb2.CheckTableExistsRequest.SerializeToString,
            ingestion__pb2.CheckTableExistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBulkloadStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/CreateBulkloadStream',
            ingestion__pb2.CreateBulkloadStreamRequest.SerializeToString,
            ingestion__pb2.CreateBulkloadStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBulkloadStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/GetBulkloadStream',
            ingestion__pb2.GetBulkloadStreamRequest.SerializeToString,
            ingestion__pb2.GetBulkloadStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommitBulkloadStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/CommitBulkloadStream',
            ingestion__pb2.CommitBulkloadStreamRequest.SerializeToString,
            ingestion__pb2.CommitBulkloadStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenBulkloadStreamWriter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/OpenBulkloadStreamWriter',
            ingestion__pb2.OpenBulkloadStreamWriterRequest.SerializeToString,
            ingestion__pb2.OpenBulkloadStreamWriterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinishBulkloadStreamWriter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cz.proto.ingestion.IGSControllerService/FinishBulkloadStreamWriter',
            ingestion__pb2.FinishBulkloadStreamWriterRequest.SerializeToString,
            ingestion__pb2.FinishBulkloadStreamWriterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class IGSWorkerDataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Read = channel.stream_stream(
                '/cz.proto.ingestion.IGSWorkerDataService/Read',
                request_serializer=ingestion__pb2.StreamReadRequest.SerializeToString,
                response_deserializer=ingestion__pb2.StreamReadResponse.FromString,
                )
        self.ReadDelta = channel.stream_stream(
                '/cz.proto.ingestion.IGSWorkerDataService/ReadDelta',
                request_serializer=ingestion__pb2.StreamReadDeltaRequest.SerializeToString,
                response_deserializer=ingestion__pb2.StreamReadResponse.FromString,
                )


class IGSWorkerDataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Read(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadDelta(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IGSWorkerDataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Read': grpc.stream_stream_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=ingestion__pb2.StreamReadRequest.FromString,
                    response_serializer=ingestion__pb2.StreamReadResponse.SerializeToString,
            ),
            'ReadDelta': grpc.stream_stream_rpc_method_handler(
                    servicer.ReadDelta,
                    request_deserializer=ingestion__pb2.StreamReadDeltaRequest.FromString,
                    response_serializer=ingestion__pb2.StreamReadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cz.proto.ingestion.IGSWorkerDataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IGSWorkerDataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Read(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/cz.proto.ingestion.IGSWorkerDataService/Read',
            ingestion__pb2.StreamReadRequest.SerializeToString,
            ingestion__pb2.StreamReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadDelta(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/cz.proto.ingestion.IGSWorkerDataService/ReadDelta',
            ingestion__pb2.StreamReadDeltaRequest.SerializeToString,
            ingestion__pb2.StreamReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
