# coding: utf-8

"""
    Xprizo API

    Xprizo api endpoints  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: support@xprizo.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from xprizo_sdk_py import schemas  # noqa: F401


class RelationshipModel(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            id = schemas.Int64Schema
            contactId = schemas.Int64Schema
            relatedContactId = schemas.Int64Schema
            
            
            class userName(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'userName':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class name(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'name':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class email(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'email':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class latestMessage(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'latestMessage':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            unReadMessages = schemas.Int32Schema
            
            
            class statusCode(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'statusCode':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class status(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'status':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class reference(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'reference':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class referenceStatus(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'referenceStatus':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class endorsed(
                schemas.Int32Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int32'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'endorsed':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class endorsedStatus(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'endorsedStatus':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class walletAccess(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'walletAccess':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class remoteAccess(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'remoteAccess':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class profilePicture(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'profilePicture':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            isAgent = schemas.BoolSchema
            isSubAgent = schemas.BoolSchema
            isRemoteAgent = schemas.BoolSchema
            agentAccess = schemas.BoolSchema
            remoteAgentAccess = schemas.BoolSchema
            __annotations__ = {
                "id": id,
                "contactId": contactId,
                "relatedContactId": relatedContactId,
                "userName": userName,
                "name": name,
                "email": email,
                "latestMessage": latestMessage,
                "unReadMessages": unReadMessages,
                "statusCode": statusCode,
                "status": status,
                "reference": reference,
                "referenceStatus": referenceStatus,
                "endorsed": endorsed,
                "endorsedStatus": endorsedStatus,
                "walletAccess": walletAccess,
                "remoteAccess": remoteAccess,
                "profilePicture": profilePicture,
                "isAgent": isAgent,
                "isSubAgent": isSubAgent,
                "isRemoteAgent": isRemoteAgent,
                "agentAccess": agentAccess,
                "remoteAgentAccess": remoteAgentAccess,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contactId"]) -> MetaOapg.properties.contactId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["relatedContactId"]) -> MetaOapg.properties.relatedContactId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userName"]) -> MetaOapg.properties.userName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["latestMessage"]) -> MetaOapg.properties.latestMessage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unReadMessages"]) -> MetaOapg.properties.unReadMessages: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusCode"]) -> MetaOapg.properties.statusCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reference"]) -> MetaOapg.properties.reference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["referenceStatus"]) -> MetaOapg.properties.referenceStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endorsed"]) -> MetaOapg.properties.endorsed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endorsedStatus"]) -> MetaOapg.properties.endorsedStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["walletAccess"]) -> MetaOapg.properties.walletAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remoteAccess"]) -> MetaOapg.properties.remoteAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilePicture"]) -> MetaOapg.properties.profilePicture: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isAgent"]) -> MetaOapg.properties.isAgent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isSubAgent"]) -> MetaOapg.properties.isSubAgent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isRemoteAgent"]) -> MetaOapg.properties.isRemoteAgent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["agentAccess"]) -> MetaOapg.properties.agentAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remoteAgentAccess"]) -> MetaOapg.properties.remoteAgentAccess: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id"], typing_extensions.Literal["contactId"], typing_extensions.Literal["relatedContactId"], typing_extensions.Literal["userName"], typing_extensions.Literal["name"], typing_extensions.Literal["email"], typing_extensions.Literal["latestMessage"], typing_extensions.Literal["unReadMessages"], typing_extensions.Literal["statusCode"], typing_extensions.Literal["status"], typing_extensions.Literal["reference"], typing_extensions.Literal["referenceStatus"], typing_extensions.Literal["endorsed"], typing_extensions.Literal["endorsedStatus"], typing_extensions.Literal["walletAccess"], typing_extensions.Literal["remoteAccess"], typing_extensions.Literal["profilePicture"], typing_extensions.Literal["isAgent"], typing_extensions.Literal["isSubAgent"], typing_extensions.Literal["isRemoteAgent"], typing_extensions.Literal["agentAccess"], typing_extensions.Literal["remoteAgentAccess"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contactId"]) -> typing.Union[MetaOapg.properties.contactId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["relatedContactId"]) -> typing.Union[MetaOapg.properties.relatedContactId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userName"]) -> typing.Union[MetaOapg.properties.userName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["latestMessage"]) -> typing.Union[MetaOapg.properties.latestMessage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unReadMessages"]) -> typing.Union[MetaOapg.properties.unReadMessages, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusCode"]) -> typing.Union[MetaOapg.properties.statusCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reference"]) -> typing.Union[MetaOapg.properties.reference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["referenceStatus"]) -> typing.Union[MetaOapg.properties.referenceStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endorsed"]) -> typing.Union[MetaOapg.properties.endorsed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endorsedStatus"]) -> typing.Union[MetaOapg.properties.endorsedStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["walletAccess"]) -> typing.Union[MetaOapg.properties.walletAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remoteAccess"]) -> typing.Union[MetaOapg.properties.remoteAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilePicture"]) -> typing.Union[MetaOapg.properties.profilePicture, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isAgent"]) -> typing.Union[MetaOapg.properties.isAgent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isSubAgent"]) -> typing.Union[MetaOapg.properties.isSubAgent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isRemoteAgent"]) -> typing.Union[MetaOapg.properties.isRemoteAgent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["agentAccess"]) -> typing.Union[MetaOapg.properties.agentAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remoteAgentAccess"]) -> typing.Union[MetaOapg.properties.remoteAgentAccess, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id"], typing_extensions.Literal["contactId"], typing_extensions.Literal["relatedContactId"], typing_extensions.Literal["userName"], typing_extensions.Literal["name"], typing_extensions.Literal["email"], typing_extensions.Literal["latestMessage"], typing_extensions.Literal["unReadMessages"], typing_extensions.Literal["statusCode"], typing_extensions.Literal["status"], typing_extensions.Literal["reference"], typing_extensions.Literal["referenceStatus"], typing_extensions.Literal["endorsed"], typing_extensions.Literal["endorsedStatus"], typing_extensions.Literal["walletAccess"], typing_extensions.Literal["remoteAccess"], typing_extensions.Literal["profilePicture"], typing_extensions.Literal["isAgent"], typing_extensions.Literal["isSubAgent"], typing_extensions.Literal["isRemoteAgent"], typing_extensions.Literal["agentAccess"], typing_extensions.Literal["remoteAgentAccess"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        contactId: typing.Union[MetaOapg.properties.contactId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        relatedContactId: typing.Union[MetaOapg.properties.relatedContactId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        userName: typing.Union[MetaOapg.properties.userName, None, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, None, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, None, str, schemas.Unset] = schemas.unset,
        latestMessage: typing.Union[MetaOapg.properties.latestMessage, None, str, datetime, schemas.Unset] = schemas.unset,
        unReadMessages: typing.Union[MetaOapg.properties.unReadMessages, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        statusCode: typing.Union[MetaOapg.properties.statusCode, None, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, None, str, schemas.Unset] = schemas.unset,
        reference: typing.Union[MetaOapg.properties.reference, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        referenceStatus: typing.Union[MetaOapg.properties.referenceStatus, None, str, schemas.Unset] = schemas.unset,
        endorsed: typing.Union[MetaOapg.properties.endorsed, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        endorsedStatus: typing.Union[MetaOapg.properties.endorsedStatus, None, str, schemas.Unset] = schemas.unset,
        walletAccess: typing.Union[MetaOapg.properties.walletAccess, None, str, schemas.Unset] = schemas.unset,
        remoteAccess: typing.Union[MetaOapg.properties.remoteAccess, None, str, schemas.Unset] = schemas.unset,
        profilePicture: typing.Union[MetaOapg.properties.profilePicture, None, str, schemas.Unset] = schemas.unset,
        isAgent: typing.Union[MetaOapg.properties.isAgent, bool, schemas.Unset] = schemas.unset,
        isSubAgent: typing.Union[MetaOapg.properties.isSubAgent, bool, schemas.Unset] = schemas.unset,
        isRemoteAgent: typing.Union[MetaOapg.properties.isRemoteAgent, bool, schemas.Unset] = schemas.unset,
        agentAccess: typing.Union[MetaOapg.properties.agentAccess, bool, schemas.Unset] = schemas.unset,
        remoteAgentAccess: typing.Union[MetaOapg.properties.remoteAgentAccess, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RelationshipModel':
        return super().__new__(
            cls,
            *_args,
            id=id,
            contactId=contactId,
            relatedContactId=relatedContactId,
            userName=userName,
            name=name,
            email=email,
            latestMessage=latestMessage,
            unReadMessages=unReadMessages,
            statusCode=statusCode,
            status=status,
            reference=reference,
            referenceStatus=referenceStatus,
            endorsed=endorsed,
            endorsedStatus=endorsedStatus,
            walletAccess=walletAccess,
            remoteAccess=remoteAccess,
            profilePicture=profilePicture,
            isAgent=isAgent,
            isSubAgent=isSubAgent,
            isRemoteAgent=isRemoteAgent,
            agentAccess=agentAccess,
            remoteAgentAccess=remoteAgentAccess,
            _configuration=_configuration,
        )
