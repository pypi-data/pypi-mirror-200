# pyproject.toml

[build-system]
requires = ["setuptools>=61.0.0", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "himawari_api"
description = "Python API for downloading and searching Himawari satellite data on local and cloud storage."
readme = "README.md"
authors = [
	{ name = "Gionata Ghiggi", email = "gionata.ghiggi@epfl.ch" },
]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Operating System :: Unix",
    "Operating System :: Microsoft",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
keywords = [
        "Himawari-8",
        "Himawari-9",
        "AHI",
        "satellite",
        "weather",
        "meteorology",
        "forecasting",
        "EWS",
    ]
dependencies = [
    "numpy",
    "pandas", 
    "tqdm",
    "trollsift",
    "fsspec",
    "s3fs",
]
requires-python = ">=3.7"
dynamic = ["version"]

[project.optional-dependencies]
full = ["satpy",
	"xarray",
	"netcdf4",
]
dev = ["pre-commit", "black", "ruff",
       "pytest", "pytest-cov", 
       "pip-tools", "bumpver", "twine",
       "setuptools>=61.0.0", "wheel",
       "build", "twine",
       "sphinx", "sphinx-gallery", "nbsphinx"]
doc = ["sphinx", "sphinx-gallery", "nbsphinx"] # sphinx-rtd-theme numpydoc pandoc
tests = ["pre-commit", "pytest", "pytest-cov"]

[project.urls]
Homepage = "https://github.com/ghiggi/himawari_api"
Source = "https://github.com/ghiggi/himawari_api"
Tracker = "https://github.com/ghiggi/himawari_api/issues"
Documentation = "https://himawari_api.readthedocs.io"
changelog = "https://github.com/ghigg/himawari_api/CHANGELOG.md"

[tool.setuptools_scm]
write_to = "himawari_api/_version.py"

[tool.setuptools]
license-files = ["LICENSE"]
packages = ["himawari_api"] # explicitly list the packages in modules

[tool.isort]
profile = "black"
skip_gitignore = true
multi_line_output = 3
line_length = 100
skip = [".tox", ".venv", "build", "dist"]

[tool.black]
line-length = 100
# skip-string-normalization = true
target-version = [
    "py37",
    "py38",
    "py39",
    "py310",
    "py311",
]

[tool.pylint]
    [tool.pylint.main]
    extension-pkg-whitelist = [
        "numpy",
        "scipy",
    ]
    ignore = "_version.py"
    load-plugins = [
        "pylint.extensions.no_self_use",
    ]

    [tool.pylint.message_control]
    disable = [
        "R0801",
    ]

    [tool.pylint.reports]
    output-format = "colorized"

    [tool.pylint.design]
    max-args = 20
    max-locals = 50
    max-branches = 30
    max-statements = 80
    max-attributes = 25
    max-public-methods = 75

[tool.coverage]
    [tool.coverage.run]
    source = ["himawari_api"]
    omit = [
        "*dev*",
        "*docs*",
        "*tutorials*",
        "*tests*",
    ]

    [tool.coverage.report]
    exclude_lines = [
        "pragma: no cover",
        "def __repr__",
        "def __str__",
    ]







 
   

 
