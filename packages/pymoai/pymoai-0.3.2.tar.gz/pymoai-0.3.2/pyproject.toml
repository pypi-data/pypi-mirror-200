[tool.poetry]
name = "pymoai"
version = "0.3.2"
description = "MontOps AI Python Client"
authors = ["montops.ai <info@montops.ai>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/MontOpsInc/pymoai"
homepage = "https://www.montops.ai/"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "AIOps",
    "MLOps",
    "ML Model Registry",
    "ML Model Store",
    "ML Monitoring",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.10"
pandas = "^1.4.3"
numpy = "1.23.5"
pydantic = "^1.10.5"
dacite = "^1.8.0"
boto3 = "^1.26.74"
dataconf = "^2.1.3"
requests = "^2.28.2"
requests-toolbelt = "^0.10.1"
urllib3 = "1.25.11"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.4"
isort = "^5.12.0"
black = "^23.1.0"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
flake8 = "^6.0.0"
mypy = "^1.0.1"
interrogate = "^1.5.0"
pydocstyle = "^6.3.0"
scriv = {extras = ["toml"], version = "^1.2.1"}
python-semantic-release = "^7.33.2"

[tool.isort]
profile = "black"

[tool.black]
line-length = 88
target_version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | local
  )/
)
'''

[tool.pycln]
all = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
plugins = [
  "pydantic.mypy"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.coverage.run]
branch = true
source = ["pymoai", "tests"]
omit = ["tests/fixtures/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]

[tool.coverage.html]
directory = "cov_html"

[tool.pytest.ini_options]
testpaths = [
  "tests",
]

[tool.interrogate]
ignore-nested-functions = true
ignore-nested-classes = true
ignore-private = true
fail-under = 80
exclude = ["docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 1
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
generate-badge = "assets"
badge-format = "svg"

[tool.scriv]
format = "md"
version = "literal: pyproject.toml: project.version"

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
version_source = "tag"
commit_version_number = true
branch = "main"
major_on_zero = false
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
