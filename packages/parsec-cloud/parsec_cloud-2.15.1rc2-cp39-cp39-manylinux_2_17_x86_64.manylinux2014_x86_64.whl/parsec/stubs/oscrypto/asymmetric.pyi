# Parsec Cloud (https://parsec.cloud) Copyright (c) AGPL-3.0 2016-present Scille SAS
from __future__ import annotations

from typing import Literal

HashAlgorithm = Literal["md5", "sha1", "sha224", "sha256", "sha384", "sha512"]

class PrivateKey:
    @property
    def byte_size(self) -> int: ...

class PublicKey:
    @property
    def byte_size(self) -> int: ...
    @property
    def algorithm(self) -> Literal["rsa", "dsa", "ec"]: ...

class Certificate: ...

def load_public_key(raw: bytes) -> PublicKey: ...
def load_private_key(raw: bytes) -> PrivateKey: ...
def dump_public_key(public_key: PublicKey, encoding: Literal["pem", "der"]) -> bytes: ...
def rsa_pss_verify(
    certificate_or_public_key: Certificate | PublicKey,
    signature: bytes,
    data: bytes,
    hash_algorithm: HashAlgorithm,
) -> None: ...
def rsa_pss_sign(private_key: PrivateKey, data: bytes, hash_algorithm: HashAlgorithm) -> bytes: ...
def rsa_oaep_encrypt(certificate_or_public_key: Certificate | PublicKey, data: bytes) -> bytes: ...
def rsa_oaep_decrypt(private_key: PrivateKey, cipher_text: bytes) -> bytes: ...
