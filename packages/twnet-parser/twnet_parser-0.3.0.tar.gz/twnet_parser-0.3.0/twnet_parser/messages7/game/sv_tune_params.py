# generated by scripts/generate_messages.py

from twnet_parser.pretty_print import PrettyPrint
from twnet_parser.packer import Unpacker
from twnet_parser.chunk_header import ChunkHeader
from twnet_parser.packer import pack_int

class MsgSvTuneParams(PrettyPrint):
    def __init__(
            self,
            ground_control_speed: int = 0,
            ground_control_accel: int = 0,
            ground_friction: int = 0,
            ground_jump_impulse: int = 0,
            air_jump_impulse: int = 0,
            air_control_speed: int = 0,
            air_control_accel: int = 0,
            air_friction: int = 0,
            hook_length: int = 0,
            hook_fire_speed: int = 0,
            hook_drag_accel: int = 0,
            hook_drag_speed: int = 0,
            gravity: int = 0,
            velramp_start: int = 0,
            velramp_range: int = 0,
            velramp_curvature: int = 0,
            gun_curvature: int = 0,
            gun_speed: int = 0,
            gun_lifetime: int = 0,
            shotgun_curvature: int = 0,
            shotgun_speed: int = 0,
            shotgun_speeddiff: int = 0,
            shotgun_lifetime: int = 0,
            grenade_curvature: int = 0,
            grenade_speed: int = 0,
            grenade_lifetime: int = 0,
            laser_reach: int = 0,
            laser_bounce_delay: int = 0,
            laser_bounce_num: int = 0,
            laser_bounce_cost: int = 0,
            player_collision: int = 0,
            player_hooking: int = 0
    ) -> None:
        self.message_name = 'sv_tune_params'
        self.system_message = False
        self.header: ChunkHeader

        self.ground_control_speed: int = ground_control_speed
        self.ground_control_accel: int = ground_control_accel
        self.ground_friction: int = ground_friction
        self.ground_jump_impulse: int = ground_jump_impulse
        self.air_jump_impulse: int = air_jump_impulse
        self.air_control_speed: int = air_control_speed
        self.air_control_accel: int = air_control_accel
        self.air_friction: int = air_friction
        self.hook_length: int = hook_length
        self.hook_fire_speed: int = hook_fire_speed
        self.hook_drag_accel: int = hook_drag_accel
        self.hook_drag_speed: int = hook_drag_speed
        self.gravity: int = gravity
        self.velramp_start: int = velramp_start
        self.velramp_range: int = velramp_range
        self.velramp_curvature: int = velramp_curvature
        self.gun_curvature: int = gun_curvature
        self.gun_speed: int = gun_speed
        self.gun_lifetime: int = gun_lifetime
        self.shotgun_curvature: int = shotgun_curvature
        self.shotgun_speed: int = shotgun_speed
        self.shotgun_speeddiff: int = shotgun_speeddiff
        self.shotgun_lifetime: int = shotgun_lifetime
        self.grenade_curvature: int = grenade_curvature
        self.grenade_speed: int = grenade_speed
        self.grenade_lifetime: int = grenade_lifetime
        self.laser_reach: int = laser_reach
        self.laser_bounce_delay: int = laser_bounce_delay
        self.laser_bounce_num: int = laser_bounce_num
        self.laser_bounce_cost: int = laser_bounce_cost
        self.player_collision: int = player_collision
        self.player_hooking: int = player_hooking

    # first byte of data
    # has to be the first byte of the message payload
    # NOT the chunk header and NOT the message id
    def unpack(self, data: bytes) -> bool:
        unpacker = Unpacker(data)
        self.ground_control_speed = unpacker.get_int() # TODO: this is a tune param
        self.ground_control_accel = unpacker.get_int() # TODO: this is a tune param
        self.ground_friction = unpacker.get_int() # TODO: this is a tune param
        self.ground_jump_impulse = unpacker.get_int() # TODO: this is a tune param
        self.air_jump_impulse = unpacker.get_int() # TODO: this is a tune param
        self.air_control_speed = unpacker.get_int() # TODO: this is a tune param
        self.air_control_accel = unpacker.get_int() # TODO: this is a tune param
        self.air_friction = unpacker.get_int() # TODO: this is a tune param
        self.hook_length = unpacker.get_int() # TODO: this is a tune param
        self.hook_fire_speed = unpacker.get_int() # TODO: this is a tune param
        self.hook_drag_accel = unpacker.get_int() # TODO: this is a tune param
        self.hook_drag_speed = unpacker.get_int() # TODO: this is a tune param
        self.gravity = unpacker.get_int() # TODO: this is a tune param
        self.velramp_start = unpacker.get_int() # TODO: this is a tune param
        self.velramp_range = unpacker.get_int() # TODO: this is a tune param
        self.velramp_curvature = unpacker.get_int() # TODO: this is a tune param
        self.gun_curvature = unpacker.get_int() # TODO: this is a tune param
        self.gun_speed = unpacker.get_int() # TODO: this is a tune param
        self.gun_lifetime = unpacker.get_int() # TODO: this is a tune param
        self.shotgun_curvature = unpacker.get_int() # TODO: this is a tune param
        self.shotgun_speed = unpacker.get_int() # TODO: this is a tune param
        self.shotgun_speeddiff = unpacker.get_int() # TODO: this is a tune param
        self.shotgun_lifetime = unpacker.get_int() # TODO: this is a tune param
        self.grenade_curvature = unpacker.get_int() # TODO: this is a tune param
        self.grenade_speed = unpacker.get_int() # TODO: this is a tune param
        self.grenade_lifetime = unpacker.get_int() # TODO: this is a tune param
        self.laser_reach = unpacker.get_int() # TODO: this is a tune param
        self.laser_bounce_delay = unpacker.get_int() # TODO: this is a tune param
        self.laser_bounce_num = unpacker.get_int() # TODO: this is a tune param
        self.laser_bounce_cost = unpacker.get_int() # TODO: this is a tune param
        self.player_collision = unpacker.get_int() # TODO: this is a tune param
        self.player_hooking = unpacker.get_int() # TODO: this is a tune param
        return True

    def pack(self) -> bytes:
        return pack_int(self.ground_control_speed) + \
            pack_int(self.ground_control_accel) + \
            pack_int(self.ground_friction) + \
            pack_int(self.ground_jump_impulse) + \
            pack_int(self.air_jump_impulse) + \
            pack_int(self.air_control_speed) + \
            pack_int(self.air_control_accel) + \
            pack_int(self.air_friction) + \
            pack_int(self.hook_length) + \
            pack_int(self.hook_fire_speed) + \
            pack_int(self.hook_drag_accel) + \
            pack_int(self.hook_drag_speed) + \
            pack_int(self.gravity) + \
            pack_int(self.velramp_start) + \
            pack_int(self.velramp_range) + \
            pack_int(self.velramp_curvature) + \
            pack_int(self.gun_curvature) + \
            pack_int(self.gun_speed) + \
            pack_int(self.gun_lifetime) + \
            pack_int(self.shotgun_curvature) + \
            pack_int(self.shotgun_speed) + \
            pack_int(self.shotgun_speeddiff) + \
            pack_int(self.shotgun_lifetime) + \
            pack_int(self.grenade_curvature) + \
            pack_int(self.grenade_speed) + \
            pack_int(self.grenade_lifetime) + \
            pack_int(self.laser_reach) + \
            pack_int(self.laser_bounce_delay) + \
            pack_int(self.laser_bounce_num) + \
            pack_int(self.laser_bounce_cost) + \
            pack_int(self.player_collision) + \
            pack_int(self.player_hooking)