Metadata-Version: 2.1
Name: data-morph-ai
Version: 0.1.0
Summary: Teaching tool on the importance of data visualization.
Author-email: Stefanie Molin <24376333+stefmolin@users.noreply.github.com>, Aaron Stevens <bheklilr2@gmail.com>, Justin Matejka <Justin.Matejka@Autodesk.com>
Maintainer-email: Stefanie Molin <24376333+stefmolin@users.noreply.github.com>
License: MIT License
        
        Copyright (c) 2017 jmatejka
        Copyright (c) 2023 Stefanie Molin
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Source, https://github.com/stefmolin/data-morph
Project-URL: Bug Tracker, https://github.com/stefmolin/data-morph/issues
Keywords: data visualization,summary statistics,data animation
Classifier: Framework :: Matplotlib
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Visualization
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
Provides-Extra: dev
Provides-Extra: docs
License-File: LICENSE

Data Morph
==========

Morph an input dataset of 2D points into select shapes, while preserving the summary
statistics to a given number of decimal points through simulated annealing.

.. image:: https://raw.githubusercontent.com/stefmolin/data-morph/main/docs/_static/panda_to_star.gif
   :alt: Morphing the panda dataset into the star shape.
   :align: center

Installation
------------
Data Morph can be installed with ``pip``:

.. code:: console

   $ pip install data-morph-ai

Usage
-----

Once installed, Data Morph can be used on the command line or as an importable Python package.
Below are some examples; be sure to check out the documentation for more information.


Command Line Usage
~~~~~~~~~~~~~~~~~~

Run ``data-morph`` on the command line:

.. code:: console

   $ data-morph --start-shape panda --target-shape star

This produces the animation in the newly-created ``morphed_data`` directory
within your current working directory (shown above).

----

See all available CLI options by passing in ``--help``:

.. code:: console

   $ data-morph --help

Python Usage
~~~~~~~~~~~~

The ``DataMorpher`` class performs the morphing from a ``Dataset`` to a ``Shape``.
Any ``pandas.DataFrame`` with numeric columns ``x`` and ``y`` can be a ``Dataset``.
Use the ``DataLoader`` to create the ``Dataset`` from a file or use a built-in dataset:

.. code:: python

   from data_morph.data.loader import DataLoader

   dataset = DataLoader.load_dataset('panda')

For morphing purposes, all target shapes are placed/sized based on aspects of the ``Dataset`` class.
All shapes are accessible via the ``ShapeFactory`` class:

.. code:: python

   from data_morph.shapes.factory import ShapeFactory

   shape_factory = ShapeFactory(dataset)
   target_shape = shape_factory.generate_shape('star')

With the ``Dataset`` and ``Shape`` created, here is a minimal example of morphing:

.. code:: python

   from data_morph.morpher import DataMorpher

   morpher = DataMorpher(
       decimals=2,
       in_notebook=False,  # whether you are running in a Jupyter Notebook
       output_dir='data_morph/output',
   )

   result = morpher.morph(start_shape=dataset, target_shape=target_shape)

Note that the ``result`` variable in the above code block is a ``pandas.DataFrame`` of the data
after completing the specified iterations of the simulated annealing process. The ``DataMorpher.morph()``
method is also saving plots to visualize the output periodically and make an animation; these end up in
``data_morph/output``, which we set as ``DataMorpher.output_dir``.


----

In this example, we morphed the built-in panda ``Dataset`` into the star ``Shape``. Be sure to try
out the other built-in options:

* The ``DataLoader.AVAILABLE_DATASETS`` attribute contains a list of available datasets, which
  are also visualized in the ``DataLoader`` documentation.

* The ``ShapeFactory.AVAILABLE_SHAPES`` attribute contains a list of available shapes, which
  are also visualized in the ``ShapeFactory`` documentation.

Acknowledgements
----------------
This code has been altered by Stefanie Molin (`@stefmolin <https://github.com/stefmolin>`_)
to work for other input datasets by parameterizing the target shapes with information from the input shape.
The original code works for a specific dataset called the "dinosaurus" and was created
for the paper *Same Stats, Different Graphs: Generating Datasets with Varied Appearance and
Identical Statistics through Simulated Annealing* by Justin Matejka and George Fitzmaurice (ACM CHI 2017).

The paper, video, and associated code and datasets can be found on the
Autodesk Research website `here <https://www.autodeskresearch.com/publications/samestats>`_.
The version of this code placed on GitHub at
`jmatejka/same-stats-different-graphs <https://github.com/jmatejka/same-stats-different-graphs>`_,
served as the starting point for the ``data_morph`` code base, which is on GitHub at
`stefmolin/data-morph <https://github.com/stefmolin/data-morph>`_.
