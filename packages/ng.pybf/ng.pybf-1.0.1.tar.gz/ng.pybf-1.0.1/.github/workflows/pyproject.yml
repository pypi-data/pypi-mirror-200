name: CI/CD

on:
  push:
    branches: [master]
    tags: ["*"]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Test
        run: |
          python -m unittest

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Get history and tags for SCM versioning to work
        run: |
          git fetch --prune --unshallow
          git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        run: pipx run cibuildwheel==2.9.0 --output-dir build

      - name: Build SDist
        if: runner.os == 'Linux'
        run: pipx run build --sdist --outdir build

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            build/*.whl
            build/*.tar.gz

  release:
    name: Release
    needs: [test, build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Publish distribution package to TestPyPI
        continue-on-error: true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: build
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: build
          password: ${{ secrets.PYPI_API_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Release package to GitHub
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: "py.bf ${{ github.ref_name	}}"
          files: |
            LICENSE
            build/*
        if: startsWith(github.ref, 'refs/tags/v')
