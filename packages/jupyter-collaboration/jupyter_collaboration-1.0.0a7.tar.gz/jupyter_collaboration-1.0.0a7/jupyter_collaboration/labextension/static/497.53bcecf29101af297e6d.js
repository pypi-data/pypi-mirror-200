"use strict";(self.webpackChunk_jupyter_collaboration_extension=self.webpackChunk_jupyter_collaboration_extension||[]).push([[497],{9497:(e,r,t)=>{t.r(r),t.d(r,{default:()=>S});var o,a=t(8872),n=t(9582),s=t(2998),i=t(225),l=t(3e3),c=t(9831);!function(e){e.openPath="filebrowser:open-path"}(o||(o={}));const d={id:"@jupyter/collaboration-extension:drive",provides:c.ICollaborativeDrive,requires:[s.ITranslator],optional:[],activate:(e,r)=>{const t=r.load("jupyter_collaboration"),o=new c.YDrive(e.serviceManager.user,t);return e.serviceManager.contents.addDrive(o),o}},u={id:"@jupyter/collaboration-extension:yfile",autoStart:!0,requires:[c.ICollaborativeDrive],optional:[],activate:(e,r)=>{r.sharedModelFactory.registerDocumentFactory("file",(()=>new l.YFile))}},p={id:"@jupyter/collaboration-extension:ynotebook",autoStart:!0,requires:[c.ICollaborativeDrive],optional:[i.ISettingRegistry],activate:(e,r,t)=>{let o=!0;t&&t.load("@jupyterlab/notebook-extension:tracker").then((e=>{const r=e=>{var r;const t=null==e?void 0:e.get("experimentalEnableDocumentWideUndoRedo").composite;o=null===(r=!t)||void 0===r||r};r(e),e.changed.connect((e=>r(e)))})),r.sharedModelFactory.registerDocumentFactory("notebook",(()=>new l.YNotebook({disableDocumentWideUndoRedo:o})))}},v={id:"@jupyter/collaboration-extension:defaultFileBrowser",provides:n.IDefaultFileBrowser,requires:[c.ICollaborativeDrive,n.IFileBrowserFactory],optional:[a.IRouter,a.JupyterFrontEnd.ITreeResolver,a.ILabShell,i.ISettingRegistry],activate:async(e,r,t,o,a,n)=>{const{commands:s}=e;e.serviceManager.contents.addDrive(r);const i=t.createFileBrowser("filebrowser",{auto:!1,restore:!1,driveName:r.name});return w.restoreBrowser(i,s,o,a,n),i}};var w;!function(e){e.restoreBrowser=async function(e,r,t,a,n){const s="jp-mod-restoring";if(e.addClass(s),!t)return await e.model.restore(e.id),await e.model.refresh(),void e.removeClass(s);const i=async()=>{t.routed.disconnect(i);const l=await(null==a?void 0:a.paths);(null==l?void 0:l.file)||(null==l?void 0:l.browser)?(await e.model.restore(e.id,!1),l.file&&await r.execute(o.openPath,{path:l.file,dontShowBrowser:!0}),l.browser&&await r.execute(o.openPath,{path:l.browser,dontShowBrowser:!0})):(await e.model.restore(e.id),await e.model.refresh()),e.removeClass(s),(null==n?void 0:n.isEmpty("main"))&&r.execute("launcher:create")};t.routed.connect(i)}}(w||(w={}));var b=t(7678),m=t(7765),y=t(5654),h=t(669),f=t(1144),g=t(8281),x=t(3530),I=t(8632),M=t(981),C=t(6493),j=t(7099);const S=[d,u,p,v,{id:"@jupyter/collaboration-extension:userMenu",description:"Provide connected user menu.",requires:[],provides:y.IUserMenu,activate:e=>{const{commands:r}=e,{user:t}=e.serviceManager;return new y.UserMenu({commands:r,user:t})}},{id:"@jupyter/collaboration-extension:userMenuBar",description:"Add user menu to the interface.",autoStart:!0,requires:[y.IUserMenu],activate:async(e,r)=>{const{shell:t}=e,{user:o}=e.serviceManager,a=new f.MenuBar({forceItemsPosition:{forceX:!1,forceY:!1},renderer:new y.RendererUserMenu(o)});a.id="jp-UserMenu",o.userChanged.connect((()=>a.update())),a.addMenu(r),t.add(a,"top",{rank:1e3})}},{id:"@jupyter/collaboration-extension:rtcGlobalAwareness",description:"Add global awareness to share working document of users.",requires:[I.IStateDB],provides:y.IGlobalAwareness,activate:(e,r)=>{const{user:t}=e.serviceManager,o=new M.Doc,a=new C.GL(o),n=x.ServerConnection.makeSettings(),s=g.URLExt.join(n.wsUrl,"api/collaboration/room");new j.WebsocketProvider(s,"JupyterLab:globalAwareness",o,{awareness:a});const i=()=>{a.setLocalStateField("user",t.identity)};return t.isReady&&i(),t.ready.then(i).catch((e=>console.error(e))),t.userChanged.connect(i),r.changed.connect((async()=>{var e,t;const o=(null===(t=null===(e=(await r.toJSON())["layout-restorer:data"])||void 0===e?void 0:e.main)||void 0===t?void 0:t.current)||"";o.startsWith("editor")||o.startsWith("notebook")?a.setLocalStateField("current",o):a.setLocalStateField("current",null)})),a}},{id:"@jupyter/collaboration-extension:rtcPanel",description:"Add side panel to display all currently connected users.",autoStart:!0,requires:[y.IGlobalAwareness],optional:[s.ITranslator],activate:(e,r,t)=>{const{user:o}=e.serviceManager,a=(null!=t?t:s.nullTranslator).load("jupyter_collaboration"),n=new h.SidePanel({alignment:"justify"});n.id=b.DOMUtils.createDomID(),n.title.icon=h.usersIcon,n.title.caption=a.__("Collaboration"),n.addClass("jp-RTCPanel"),e.shell.add(n,"left",{rank:300});const i=new y.UserInfoPanel(o);i.title.label=a.__("User info"),i.title.caption=a.__("User information"),n.addWidget(i);const l=new y.CollaboratorsPanel(o,r,(r=>{e.commands.execute("docmanager:open",{path:r})}));l.title.label=a.__("Online Collaborators"),n.addWidget(l)}},{id:"@jupyter/collaboration-extension:userEditorCursors",description:"Add CodeMirror extension to display remote user cursors and selections.",autoStart:!0,requires:[m.IEditorExtensionRegistry],activate:(e,r)=>{r.addExtension({name:"remote-user-cursors",factory(e){const{awareness:r,ysource:t}=e.model.sharedModel;return m.EditorExtensionRegistry.createImmutableExtension((0,y.remoteUserCursors)({awareness:r,ytext:t}))}})}}]}}]);