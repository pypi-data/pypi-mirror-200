Metadata-Version: 2.1
Name: exciton
Version: 1.4.1
Summary: Domain-specific Natural Language Processing with exciton
Home-page: https://exciton.com
Author: The exciton Team
Author-email: excitonx@gmail.com
License: UNKNOWN
Keywords: exciton NLP Deep Learning
Platform: UNKNOWN
Classifier: Intended Audience :: Science/Research
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8.10
Description-Content-Type: text/markdown
Requires-Dist: ctranslate2 (==2.20.0)
Requires-Dist: numpy (==1.21.2)
Requires-Dist: pysbd (==0.3.4)
Requires-Dist: scikit-learn (==1.0)
Requires-Dist: sentence-splitter (==1.4)
Requires-Dist: sentencepiece (==0.1.96)
Requires-Dist: spacy (==3.5.1)
Requires-Dist: torch (==2.0.0)
Requires-Dist: torchvision (==0.15.1)
Requires-Dist: tqdm (==4.49.0)
Requires-Dist: transformers (==4.11.2)

# Exciton NLP - A tool for natural language processing

Exciton NLP is designed and maintained by ExcitonX for different NLP tasks, including multilingual classification, NER, translation, etc.

## Installation
Use ``pip`` to install exciton. Run:

```
pip install -U exciton
```

## Usage

```

from exciton.nlp.translation import M2M100

model = M2M100(model="m2m100_1.2b", device="cuda")
source = [
    {"id": 1, "source": "I love you!", "source_lang": "en", "target_lang": "zh"},
    {"id": 2, "source": "我爱你！", "source_lang": "zh", "target_lang": "en"}
]
results = model.predict(source)

```

