[
  "tests/test_examples.py::test_example[./examples/example-01.py]",
  "tests/test_examples.py::test_example[./examples/example-02.py]",
  "tests/test_examples.py::test_example[./examples/example-03.py]",
  "tests/test_fn_exec.py::test_async_executor",
  "tests/test_fn_exec.py::test_execute_function",
  "tests/test_fn_exec.py::test_executor",
  "tests/test_fn_exec.py::test_executor_with_given_scoped_services",
  "tests/test_services.py::test_add_alias_raises_if_alias_is_defined",
  "tests/test_services.py::test_add_alias_raises_in_strict_mode",
  "tests/test_services.py::test_add_alias_requires_configured_type",
  "tests/test_services.py::test_add_aliases",
  "tests/test_services.py::test_add_instance_allows_for_circular_classes",
  "tests/test_services.py::test_add_instance_with_declared_type",
  "tests/test_services.py::test_add_singleton_by_factory_given_type[add_scoped_by_factory]",
  "tests/test_services.py::test_add_singleton_by_factory_given_type[add_singleton_by_factory]",
  "tests/test_services.py::test_add_singleton_by_factory_given_type[add_transient_by_factory]",
  "tests/test_services.py::test_add_singleton_by_factory_raises_for_missing_type[add_scoped_by_factory]",
  "tests/test_services.py::test_add_singleton_by_factory_raises_for_missing_type[add_singleton_by_factory]",
  "tests/test_services.py::test_add_singleton_by_factory_raises_for_missing_type[add_transient_by_factory]",
  "tests/test_services.py::test_add_transient_shortcut",
  "tests/test_services.py::test_additional_alias",
  "tests/test_services.py::test_annotation_nested_resolution_1",
  "tests/test_services.py::test_annotation_nested_resolution_2",
  "tests/test_services.py::test_annotation_resolution",
  "tests/test_services.py::test_annotation_resolution_scoped",
  "tests/test_services.py::test_annotation_resolution_singleton",
  "tests/test_services.py::test_annotation_resolution_transient",
  "tests/test_services.py::test_annotations_abstract_type_transient_service",
  "tests/test_services.py::test_build_provider_raises_for_missing_scoped_parameter",
  "tests/test_services.py::test_build_provider_raises_for_missing_singleton_parameter",
  "tests/test_services.py::test_build_provider_raises_for_missing_transient_parameter",
  "tests/test_services.py::test_by_factory_type_annotation[add_scoped_by_factory]",
  "tests/test_services.py::test_by_factory_type_annotation[add_singleton_by_factory]",
  "tests/test_services.py::test_by_factory_type_annotation[add_transient_by_factory]",
  "tests/test_services.py::test_by_factory_type_annotation_simple",
  "tests/test_services.py::test_by_factory_type_annotation_simple_local",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_scoped_by_factory-cat_factory_no_args]",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_scoped_by_factory-cat_factory_with_context]",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_scoped_by_factory-cat_factory_with_context_and_activating_type]",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_singleton_by_factory-cat_factory_no_args]",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_singleton_by_factory-cat_factory_with_context]",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_singleton_by_factory-cat_factory_with_context_and_activating_type]",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_transient_by_factory-cat_factory_no_args]",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_transient_by_factory-cat_factory_with_context]",
  "tests/test_services.py::test_by_factory_with_different_parameters[add_transient_by_factory-cat_factory_with_context_and_activating_type]",
  "tests/test_services.py::test_cannot_resolve_parameter_in_strict_mode_throws",
  "tests/test_services.py::test_circular_dependency_is_supported_by_factory",
  "tests/test_services.py::test_container_handles_class_without_init",
  "tests/test_services.py::test_container_iter",
  "tests/test_services.py::test_container_protocol",
  "tests/test_services.py::test_container_protocol_any_argument",
  "tests/test_services.py::test_container_protocol_register",
  "tests/test_services.py::test_container_register_instance",
  "tests/test_services.py::test_deps_github_scenario",
  "tests/test_services.py::test_dict_generic_alias",
  "tests/test_services.py::test_dict_generic_alias_dict",
  "tests/test_services.py::test_does_not_raise_for_deep_circular_dependency_with_one_factory",
  "tests/test_services.py::test_exact_alias",
  "tests/test_services.py::test_factories_activating_scoped_type_consistency[add_scoped_by_factory]",
  "tests/test_services.py::test_factories_activating_scoped_type_consistency[add_singleton_by_factory]",
  "tests/test_services.py::test_factories_activating_scoped_type_consistency[add_transient_by_factory]",
  "tests/test_services.py::test_factories_activating_singleton_type_consistency[add_scoped_by_factory]",
  "tests/test_services.py::test_factories_activating_singleton_type_consistency[add_singleton_by_factory]",
  "tests/test_services.py::test_factories_activating_singleton_type_consistency[add_transient_by_factory]",
  "tests/test_services.py::test_factories_activating_transient_type_consistency[add_scoped_by_factory]",
  "tests/test_services.py::test_factories_activating_transient_type_consistency[add_singleton_by_factory]",
  "tests/test_services.py::test_factories_activating_transient_type_consistency[add_transient_by_factory]",
  "tests/test_services.py::test_factories_type_scoped_consistency_nested[add_scoped_by_factory]",
  "tests/test_services.py::test_factories_type_scoped_consistency_nested[add_singleton_by_factory]",
  "tests/test_services.py::test_factories_type_scoped_consistency_nested[add_transient_by_factory]",
  "tests/test_services.py::test_factories_type_singleton_consistency_nested[add_scoped_by_factory]",
  "tests/test_services.py::test_factories_type_singleton_consistency_nested[add_singleton_by_factory]",
  "tests/test_services.py::test_factories_type_singleton_consistency_nested[add_transient_by_factory]",
  "tests/test_services.py::test_factories_type_transient_consistency_nested[add_scoped_by_factory]",
  "tests/test_services.py::test_factories_type_transient_consistency_nested[add_singleton_by_factory]",
  "tests/test_services.py::test_factories_type_transient_consistency_nested[add_transient_by_factory]",
  "tests/test_services.py::test_factory_can_receive_activating_type_as_parameter[add_scoped_by_factory]",
  "tests/test_services.py::test_factory_can_receive_activating_type_as_parameter[add_transient_by_factory]",
  "tests/test_services.py::test_factory_can_receive_activating_type_as_parameter_nested_resolution",
  "tests/test_services.py::test_factory_can_receive_activating_type_as_parameter_nested_resolution_many",
  "tests/test_services.py::test_factory_with_locals_get_annotations",
  "tests/test_services.py::test_factory_without_locals_raises",
  "tests/test_services.py::test_generic",
  "tests/test_services.py::test_get_service_by_name_or_alias",
  "tests/test_services.py::test_ignore_class_var",
  "tests/test_services.py::test_ignore_subclass_class_var",
  "tests/test_services.py::test_import_version",
  "tests/test_services.py::test_instance_resolver_representation",
  "tests/test_services.py::test_interdependencies",
  "tests/test_services.py::test_invalid_factory_too_many_arguments_throws[add_scoped_by_factory]",
  "tests/test_services.py::test_invalid_factory_too_many_arguments_throws[add_singleton_by_factory]",
  "tests/test_services.py::test_invalid_factory_too_many_arguments_throws[add_transient_by_factory]",
  "tests/test_services.py::test_iterables_annotations_scoped_factory[Iterable-value0]",
  "tests/test_services.py::test_iterables_annotations_scoped_factory[Iterable-value1]",
  "tests/test_services.py::test_iterables_annotations_scoped_factory[List-value2]",
  "tests/test_services.py::test_iterables_annotations_scoped_factory[List-value5]",
  "tests/test_services.py::test_iterables_annotations_scoped_factory[Sequence-value4]",
  "tests/test_services.py::test_iterables_annotations_scoped_factory[Tuple-value3]",
  "tests/test_services.py::test_iterables_annotations_singleton[Iterable-value0]",
  "tests/test_services.py::test_iterables_annotations_singleton[Iterable-value1]",
  "tests/test_services.py::test_iterables_annotations_singleton[List-value2]",
  "tests/test_services.py::test_iterables_annotations_singleton[List-value5]",
  "tests/test_services.py::test_iterables_annotations_singleton[Sequence-value4]",
  "tests/test_services.py::test_iterables_annotations_singleton[Tuple-value3]",
  "tests/test_services.py::test_iterables_annotations_transient_factory[Iterable-value0]",
  "tests/test_services.py::test_iterables_annotations_transient_factory[Iterable-value1]",
  "tests/test_services.py::test_iterables_annotations_transient_factory[List-value2]",
  "tests/test_services.py::test_iterables_annotations_transient_factory[List-value5]",
  "tests/test_services.py::test_iterables_annotations_transient_factory[Sequence-value4]",
  "tests/test_services.py::test_iterables_annotations_transient_factory[Tuple-value3]",
  "tests/test_services.py::test_list",
  "tests/test_services.py::test_list_generic_alias",
  "tests/test_services.py::test_list_generic_alias_list",
  "tests/test_services.py::test_mapping_generic_alias",
  "tests/test_services.py::test_missing_service_can_return_default",
  "tests/test_services.py::test_missing_service_raises_exception",
  "tests/test_services.py::test_overriding_alias_from_class_name_throws",
  "tests/test_services.py::test_proper_handling_of_inheritance",
  "tests/test_services.py::test_provide_protocol_generic",
  "tests/test_services.py::test_raises_for_circular_dependency",
  "tests/test_services.py::test_raises_for_circular_dependency_class_annotation",
  "tests/test_services.py::test_raises_for_circular_dependency_with_dynamic_resolver",
  "tests/test_services.py::test_raises_for_deep_circular_dependency_with_dynamic_resolver",
  "tests/test_services.py::test_raises_for_nested_circular_dependency",
  "tests/test_services.py::test_raises_for_optional_parameter",
  "tests/test_services.py::test_raises_for_overriding_service",
  "tests/test_services.py::test_raises_invalid_factory_for_non_callable",
  "tests/test_services.py::test_resolution_by_parameter_name",
  "tests/test_services.py::test_resolve_singleton_by_parameter_name",
  "tests/test_services.py::test_scoped_services",
  "tests/test_services.py::test_scoped_services_abstract",
  "tests/test_services.py::test_scoped_services_context_used_more_than_once",
  "tests/test_services.py::test_scoped_services_context_used_more_than_once_manual_dispose",
  "tests/test_services.py::test_scoped_services_exact",
  "tests/test_services.py::test_scoped_services_with_shortcut",
  "tests/test_services.py::test_service_collection_contains",
  "tests/test_services.py::test_service_provider_contains",
  "tests/test_services.py::test_service_provider_supports_set_and_get_item_by_class",
  "tests/test_services.py::test_service_provider_supports_set_and_get_item_by_name",
  "tests/test_services.py::test_service_provider_supports_set_by_class",
  "tests/test_services.py::test_service_provider_supports_set_by_name",
  "tests/test_services.py::test_service_provider_supports_set_simple_values",
  "tests/test_services.py::test_services_set_throws_if_service_is_already_defined",
  "tests/test_services.py::test_set_alias_raises_if_alias_is_defined",
  "tests/test_services.py::test_set_alias_raises_in_strict_mode",
  "tests/test_services.py::test_set_alias_requires_configured_type",
  "tests/test_services.py::test_set_aliases",
  "tests/test_services.py::test_singleton_by_instance",
  "tests/test_services.py::test_singleton_by_provider",
  "tests/test_services.py::test_singleton_by_provider_both_singletons",
  "tests/test_services.py::test_singleton_by_provider_with_shortcut",
  "tests/test_services.py::test_singleton_services",
  "tests/test_services.py::test_standard_param_name[CamelCase-camel_case]",
  "tests/test_services.py::test_standard_param_name[Cat-cat]",
  "tests/test_services.py::test_standard_param_name[HTTPResponse-http_response]",
  "tests/test_services.py::test_standard_param_name[ICatsRepository-icats_repository]",
  "tests/test_services.py::test_standard_param_name[UFO-ufo]",
  "tests/test_services.py::test_support_for_dataclasses",
  "tests/test_services.py::test_transient_by_type_with_parameters",
  "tests/test_services.py::test_transient_by_type_without_parameters",
  "tests/test_services.py::test_transient_service",
  "tests/test_services.py::test_transient_services",
  "tests/test_services.py::test_type_hints_precedence",
  "tests/test_services.py::test_type_hints_precedence_with_shortcuts"
]