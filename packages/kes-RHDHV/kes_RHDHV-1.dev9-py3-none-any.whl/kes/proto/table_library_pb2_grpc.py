# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import kes.proto.table_library_pb2 as table__library__pb2


class TableLibraryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.listTableLibraries = channel.unary_unary(
                '/kes.TableLibrary/listTableLibraries',
                request_serializer=table__library__pb2.LibraryListRequest.SerializeToString,
                response_deserializer=table__library__pb2.Libraries.FromString,
                )
        self.readTableLibrary = channel.unary_unary(
                '/kes.TableLibrary/readTableLibrary',
                request_serializer=table__library__pb2.LibraryRequest.SerializeToString,
                response_deserializer=table__library__pb2.Library.FromString,
                )
        self.createTable = channel.unary_unary(
                '/kes.TableLibrary/createTable',
                request_serializer=table__library__pb2.CreateTableRequest.SerializeToString,
                response_deserializer=table__library__pb2.TableInfo.FromString,
                )
        self.createField = channel.unary_unary(
                '/kes.TableLibrary/createField',
                request_serializer=table__library__pb2.CreateFieldRequest.SerializeToString,
                response_deserializer=table__library__pb2.FieldInfo.FromString,
                )


class TableLibraryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def listTableLibraries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readTableLibrary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createField(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TableLibraryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'listTableLibraries': grpc.unary_unary_rpc_method_handler(
                    servicer.listTableLibraries,
                    request_deserializer=table__library__pb2.LibraryListRequest.FromString,
                    response_serializer=table__library__pb2.Libraries.SerializeToString,
            ),
            'readTableLibrary': grpc.unary_unary_rpc_method_handler(
                    servicer.readTableLibrary,
                    request_deserializer=table__library__pb2.LibraryRequest.FromString,
                    response_serializer=table__library__pb2.Library.SerializeToString,
            ),
            'createTable': grpc.unary_unary_rpc_method_handler(
                    servicer.createTable,
                    request_deserializer=table__library__pb2.CreateTableRequest.FromString,
                    response_serializer=table__library__pb2.TableInfo.SerializeToString,
            ),
            'createField': grpc.unary_unary_rpc_method_handler(
                    servicer.createField,
                    request_deserializer=table__library__pb2.CreateFieldRequest.FromString,
                    response_serializer=table__library__pb2.FieldInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kes.TableLibrary', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TableLibrary(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def listTableLibraries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kes.TableLibrary/listTableLibraries',
            table__library__pb2.LibraryListRequest.SerializeToString,
            table__library__pb2.Libraries.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def readTableLibrary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kes.TableLibrary/readTableLibrary',
            table__library__pb2.LibraryRequest.SerializeToString,
            table__library__pb2.Library.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kes.TableLibrary/createTable',
            table__library__pb2.CreateTableRequest.SerializeToString,
            table__library__pb2.TableInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createField(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kes.TableLibrary/createField',
            table__library__pb2.CreateFieldRequest.SerializeToString,
            table__library__pb2.FieldInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
