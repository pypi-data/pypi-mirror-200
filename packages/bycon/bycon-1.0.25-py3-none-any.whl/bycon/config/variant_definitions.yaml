cnv_dummy_values:
  DUP: 0.58
  DEL: -1
  HLDUP: 1.32
  AMP: 2
  HOMODEL: -2

amp_max_size: 5000000

# relative_copy_class referes to VRS
efo_vrs_map:
  EFO:0030064:
    label: regional base ploidy
    relative_copy_class: "copy neutral"
    DUPDEL: Null
  EFO:0030065:
    label: copy-neutral loss of heterozygosity
    relative_copy_class: "copy neutral"
    DUPDEL: LOH
  EFO:0030067:
    label: copy number loss
    relative_copy_class: "partial loss"
    DUPDEL: DEL
  EFO:0030068:
    label: low-level copy number loss
    relative_copy_class: "partial loss"
    DUPDEL: DEL
  EFO:0030069:
    label: complete genomic deletion
    relative_copy_class: "complete loss"
    DUPDEL: DEL
  EFO:0030070:
    label: copy number gain
    relative_copy_class: "low-level gain"
    DUPDEL: DUP
  EFO:0030071:
    label: low-level copy number gain
    relative_copy_class: "low-level gain"
    DUPDEL: DUP
  EFO:0030072:
    label: high-level copy number gain
    relative_copy_class: "high-level gain"
    DUPDEL: DUP
  EFO:0030073:
    label: focal genome amplification
    relative_copy_class: "high-level gain"
    DUPDEL: DUP

cnv_iscn_defs:
  DUP:
    info:
      revish_label: enh
    variant_type: DUP
    variant_state:
      id: EFO:0030070
      label: copy number gain
  DEL:
    info:
      revish_label: dim
    variant_type: DEL
    variant_state:
      id: EFO:0030067
      label: copy number loss
  HLDUP:
    info:
      revish_label: hldup
    variant_type: DUP
    variant_state:
      id: EFO:0030072
      label: high-level copy number gain
  AMP:
    info:
      revish_label: amp
    variant_type: DUP
    variant_state:
      id: EFO:0030073
      label: focal genome amplification
  HOMODEL:
    info:
      revish_label: homodel
    variant_type: DEL
    variant_state:
      id: EFO:0030069
      label: complete genomic deletion

refseq_chromosomes: # GRCh38.p13
  chr1:
    chr: "1"
    genbank_id: "CM000663.2"
    refseq_id: "refseq:NC_000001.11"
    length: 248956422
  chr2:
    chr: "2"
    genbank_id: "CM000664.2"
    refseq_id: "refseq:NC_000002.12"
    length: 242193529
  chr3:
    chr: "3"
    genbank_id: "CM000665.2"
    refseq_id: "refseq:NC_000003.12"
    length: 198295559
  chr4:
    chr: "4"
    genbank_id: "CM000666.2"
    refseq_id: "refseq:NC_000004.12"
    length: 190214555
  chr5:
    chr: "5"
    genbank_id: "CM000667.2"
    refseq_id: "refseq:NC_000005.10"
    length: 181538259
  chr6:
    chr: "6"
    genbank_id: "CM000668.2"
    refseq_id: "refseq:NC_000006.12"
    length: 170805979
  chr7:
    chr: "7"
    genbank_id: "CM000669.2"
    refseq_id: "refseq:NC_000007.14"
    length: 159345973
  chr8:
    chr: "8"
    genbank_id: "CM000670.2"
    refseq_id: "refseq:NC_000008.11"
    length: 145138636
  chr9:
    chr: "9"
    genbank_id: "CM000671.2"
    refseq_id: "refseq:NC_000009.12"
    length: 138394717
  chr10:
    chr: "10"
    genbank_id: "CM000672.2"
    refseq_id: "refseq:NC_000010.11"
    length: 133797422
  chr11:
    chr: "11"
    genbank_id: "CM000673.2"
    refseq_id: "refseq:NC_000011.10"
    length: 135086622
  chr12:
    chr: "12"
    genbank_id: "CM000674.2"
    refseq_id: "refseq:NC_000012.12"
    length: 133275309
  chr13:
    chr: "13"
    genbank_id: "CM000675.2"
    refseq_id: "refseq:NC_000013.11"
    length: 114364328
  chr14:
    chr: "14"
    genbank_id: "CM000676.2"
    refseq_id: "refseq:NC_000014.9"
    length: 107043718
  chr15:
    chr: "15"
    genbank_id: "CM000677.2"
    refseq_id: "refseq:NC_000015.10"
    length: 101991189
  chr16:
    chr: "16"
    genbank_id: "CM000678.2"
    refseq_id: "refseq:NC_000016.10"
    length: 90338345
  chr17:
    chr: "17"
    genbank_id: "CM000679.2"
    refseq_id: "refseq:NC_000017.11"
    length: 83257441
  chr18:
    chr: "18"
    genbank_id: "CM000680.2"
    refseq_id: "refseq:NC_000018.10"
    length: 80373285
  chr19:
    chr: "19"
    genbank_id: "CM000681.2"
    refseq_id: "refseq:NC_000019.10"
    length: 58617616
  chr20:
    chr: "20"
    genbank_id: "CM000682.2"
    refseq_id: "refseq:NC_000020.11"
    length: 64444167
  chr21:
    chr: "21"
    genbank_id: "CM000683.2"
    refseq_id: "refseq:NC_000021.9"
    length: 46709983
  chr22:
    chr: "22"
    genbank_id: "CM000684.2"
    refseq_id: "refseq:NC_000022.11"
    length: 50818468
  chrX:
    chr: "X"
    genbank_id: "CM000685.2"
    refseq_id: "refseq:NC_000023.11"
    length: 156040895
  chrY:
    chr: "Y"
    genbank_id: "CM000686.2"
    refseq_id: "refseq:NC_000024.10"
    length: 57227415

variant_state_aliases:
  SNV: LiteralSequenceExpression
  LiteralSequenceExpression: LiteralSequenceExpression
  CNV: EFO:0030066
  EFO:0030066: EFO:0030066
  DUP: EFO:0030070
  EFO:0030070: EFO:0030070
  EFO:0030071: EFO:0030071
  EFO:0030072: EFO:0030072
  EFO:0030073: EFO:0030073
  DEL: EFO:0030067
  EFO:0030067: EFO:0030067
  EFO:0030068: EFO:0030068
  EFO:0030069: EFO:0030069

variant_state_VCF_aliases:
  LiteralSequenceExpression: SNV
  DUP: DUP
  DEL: DEL
  CNV: CNV
  EFO:0030066: CNV
  EFO:0030070: DUP
  EFO:0030071: DUP
  EFO:0030072: DUP
  EFO:0030073: DUP
  EFO:0030067: DEL
  EFO:0030068: DEL
  EFO:0030069: DEL
 
variant_states:
  LiteralSequenceExpression:
    child_terms:
      - null
  EFO:0030066:
    child_terms:
      - EFO:0030066
      - EFO:0030067
      - EFO:0030068
      - EFO:0030069
      - EFO:0030070
      - EFO:0030071
      - EFO:0030072
      - EFO:0030073      
  EFO:0030070:
    child_terms:
      - EFO:0030070
      - EFO:0030071
      - EFO:0030072
      - EFO:0030073
  EFO:0030071:
    child_terms:
      - EFO:0030071
  EFO:0030072:
    child_terms:
      - EFO:0030072
      - EFO:0030073
  EFO:0030073:
    child_terms:
      - EFO:0030073
  EFO:0030067:
    child_terms:
      - EFO:0030067
      - EFO:0030068
      - EFO:0030069
  EFO:0030068:
    child_terms:
      - EFO:0030068
  EFO:0030069:
    child_terms:
      - EFO:0030069

parameters:

  assembly_id:
    type: string
    pattern: '^\w+?[\w\-\.]*?\w*?$'
    db_key: assembly_id
    default: GRCh38

  reference_name:
    type: string
    db_key: location.sequence_id
    pattern: '^\w+.*?\w?$'

  mate_name:
    type: string
    db_key: location.sequence_id
    pattern: '^\w+.*?\w?$'

  reference_bases:
    type: string
    db_key: reference_bases
    pattern: '^[ACGTN]+$'

  alternate_bases:
    type: string
    db_key: state.sequence
    pattern: '^[ACGTN]+$'

  variant_type:
    db_key: variant_state.id
    items:
    type: string
    # pattern: '^((?:\w+\-?\w+ \w+)|(?:EFO:\d+)|(?:DUP)|(?:DEL)|(?:BND)|(?:LOH)|(?:INS)|(?:INV)|(?:CNV)|(?:INDEL)|(?:SNP)|(?:SNV))$'
    pattern: '^\w+[\w \-\:]\w+?$'

  start:
    type: array
    db_key: location.interval.start.value
    items:
      type: integer
      pattern: '^\d+?$'

  end:
    type: array
    db_key: location.interval.end.value
    items:
      type: integer
      pattern: '^\d+?$'

  variant_min_length:
    type: integer
    db_key: info.var_length
    pattern: '^\d+?$'
    description: >-
      The minimal length, in bases, of a genomic variant. This parameter can be applied to e.g. CNV queries.

  variant_max_length:
    type: integer
    db_key: info.var_length
    pattern: '^\d+?$'
    description: >
      The maximal length, in bases, of a genomic variant. This parameter can be applied to e.g. CNV queries.

  gene_id:
    type: string
    db_key: Null
    pattern: '^\w+?(\w+?(\-\w+?)?)?$'

# custom parameters

  # _id:
  #   type: string
  #   db_key: _id
  #   pattern: '^[a-fA-F\d]{24}$'
  #   description: >
  #     The internal object id, as string.

  variant_internal_id:
    type: string
    db_key: variant_internal_id
    pattern: '^\w[\w\:\-\,]+?\w$'
    description: >
      An id value used for all variant instances of the same composition.
      In Progenetix this is used to aggregate all the instances of
      "caseLevelData" variants.

  id:
    type: string
    db_key: id
    pattern: '^\w[\w\:\-\,]+?\w$'
    description: >
      A variant id, if existing in the database.

  cyto_bands:
    db_key: Null
    pattern: ^(?:chro?)?([12]?[\dXY])([pq](?:(?:ter)|(?:cen)|(?:[1-4](?:\d(?:\.\d\d*?)?)?)?))?\-?([pq](?:(?:cen)|(?:ter)|(?:[1-4](?:\d(?:\.\d\d*?)?)?)?))?$
    type: string

  chro_bases:
    db_key: Null
    pattern: ^(chro?)?([12]?[\dXY])\:(\d+?)(\-(\d+?))?$
    type: string

request_types:

  variantTypeRequest:
    description: >
      A query for SNV variants; not a Beacon standard.
    all_of:
      - variant_type
    optional:
      - reference_name

  variantIdRequest:
    description: >
      A query for a specific variant by its `id` or internal `_id`.
    one_of:
      - id
      - _id
      - variant_internal_id

  variantCNVrequest:
    description: >
      This specific request allows for the bracketed search of genomic variants
      with start and end coordinates and a variant type. in contrast to a
      beaconRangeRequest, the start and end positions of the matched variants
      have to fall into the (1 base or longer) intervals for start and end,
      respectively (while for the range request variants falling between start
      and end are being matched).
      `start` and `end` parameters are lists of 1 or 2 integers. The most common
      use here would be a use of 2 integers both for start and end, to allow
      fuzzy matching of CNVs and similar variants of imprecise length and
      position.
    all_of:
      - assembly_id
      - start
      - end
      - reference_name
      - variant_type
    optional:
      - variant_min_length
      - variant_max_length

  variantRangeRequest:
    description: >-
      The beaconRangeRequest queries variants falling between start and end.
      `start` and `end` parameters should be single values.
    all_of:
      - assembly_id
      - start
      - end
      - reference_name
    optional:
      - variant_type
      - reference_bases
      - alternate_bases
      - variant_min_length
      - variant_max_length

  variantAlleleRequest:
    description: >
      This type corresponds to the original BeaconAlleleRequest, in which at a
      specified genome position a query looks for a combination of reference and
      replacement base(s).
    all_of:
      - assembly_id
      - start
      - reference_name
      - reference_bases
      - alternate_bases

# custom

  variantFusionRequest:
    description: |
      This request is similar to the CNV request in using possibly fuzzy
      intervals for start and end of structural variants. However, here the
      "end" position refers to the fusion partner on the same or different
      chromosome as specified through "mateName".
      Conventions:
      * `mateName` can be the same or different to `referenceName`
      * `mateName` is the higher numbered/named chromosome
    all_of:
      - assembly_id
      - reference_name
      - mate_name
      - start
      - end

  geneVariantRequest:
    description: >
      A variant overlapping with the genomic coordinates of a gene or other named sequence element.
    all_of:
      - gene_id
    optional:
      - variant_type
      - reference_bases
      - alternate_bases
      - variant_min_length
      - variant_max_length

  cytobands2positions_request:
    all_of:
      - assembly_id
      - cyto_bands

  positions2cytobands_request:
    all_of:
      - assembly_id
      - start
      - end
      - reference_name
      - range_tag

  ChromosomeLocation:
    all_of:
      - type
      - species
      - chr
      - start
      - end
