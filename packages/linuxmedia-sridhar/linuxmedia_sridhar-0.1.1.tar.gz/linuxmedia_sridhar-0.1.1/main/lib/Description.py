class Description:
    def Author(self):
        print("Linus Benedict Torvalds Finland Swedish ; born (28 December 1969) is a Finnish software engineer who ")
        print("is the creator and, historically, the lead developer of the Linux kernel, used by Linux distributions ")
        print("and other operating systems such as Android. He also created the distributed version control system Git.\n")
        print("He was honored, along with Shinya Yamanaka, with the 2012 Millennium Technology Prize by the ")
        print("Technology Academy Finland in recognition of his creation of a new open source operating system ")
        print("for computers leading to the widely used Linux kernel.")
        print("He is also the recipient of the 2014 IEEE Computer Society Computer Pioneer Award and the 2018 IEEE Masaru Ibuka Consumer Electronics Award.")
    def History_Linux(self):
        print("The first Linux prototypes were publicly released in late 1991.Version 1.0 was released on 14 March 1994")
        print("Torvalds first encountered the GNU Project in 1991 when another Swedish-speaking computer science student,")
        print("Lars Wirzenius, took him to the University of Technology to listen to free software guru Richard Stallman's speech.")
        print("[citation needed] Torvalds used Stallman's GNU General Public License version 2 (GPLv2) for his Linux kernel.")
        print("After a visit to Transmeta in late 1996,Torvalds accepted a position at the company in California,")
        print("where he worked from February 1997 to June 2003. He then moved to the Open Source Development Labs,")
        print("which has since merged with the Free Standards Group to become the Linux Foundation, under whose auspices he continues to work.")
        print("In June 2004, Torvalds and his family moved to Dunthorpe, Oregon[24] to be closer to the OSDL's headquarters in Beaverton.")
        print("From 1997 to 1999, he was involved in 86open, helping select the standard binary format for Linux and Unix. In 1999, ")
        print("he was named by the MIT Technology Review TR100 as one of the world's top 100 innovators under age 35\n\n")
        print("In 1999, Red Hat and VA Linux, both leading developers of Linux-based software, presented Torvalds with stock options in gratitude for his creation.")
        print("That year both companies went public and Torvalds's share value briefly shot up to about US$20 million.")
        print("His personal mascot is a penguin nicknamed Tux,which has been widely adopted by the Linux community as the Linux kernel's mascot")
        print("Although Torvalds believes 'open source is the only right way to do software', he also has said that he uses the 'best tool for the job', ")
        print("even if that includes proprietary software.He was criticized for his use and alleged advocacy of the proprietary BitKeeper software for version control in the Linux kernel.")
        print("He subsequently wrote a free-software replacement for it called Git.\n\n")
        print("In 2008, Torvalds stated that he used the Fedora Linux distribution because it had fairly good support for the PowerPC processor architecture,")
        print("which he favored at the time.He confirmed this in a 2012 interview.He has also posted updates about his choice of desktop environment,")
        print("often in response to perceived feature regressions\n\n")
        print("The Linux Foundation currently sponsors Torvalds so he can work full-time on improving Linux")
        print("Torvalds is known for vocally disagreeing with other developers on the Linux kernel mailing list.")
        print("Calling himself a 'really unpleasant person', he explained,")
        print("I'd like to be a nice person and curse less and encourage people to grow rather than telling them they are idiots. I'm sorry—I tried, it's just not in me.")
        print("His attitude, which he considers necessary for making his points clear, has drawn criticism from Intel programmer Sage Sharp and systemd developer Lennart Poettering, among others\n\n")
        print("On Sunday, 16 September 2018, the Linux kernel Code of Conflict was suddenly replaced by a new Code of Conduct based on the Contributor Covenant.") 
        print("Shortly thereafter, in the release notes for Linux 4.19-rc4, Torvalds apologized for his behavior,")
        print("calling his personal attacks of the past 'unprofessional and uncalled for' and announced a period of 'time off' to 'get some assistance on how to understand people's emotions and respond appropriately.")
        print("It soon transpired that these events followed The New Yorker approaching Torvalds with a series of questions critical of his conduct.")
        print("Following the release of Linux 4.19 on 22 October 2018, Torvalds returned to maintaining the kernel.")
    def Awards_and_achievements(self):
        print("Year                         Award                                                           Notes")
        print("2018                         IEEE Masaru Ibuka Consumer Electronics Award                    IEEE Masaru Ibuka Consumer Electronics Award is conferred by the Institute of Electrical and Electronics Engineers for outstanding contributions to consumer electronics technology has been named in honor of the co-founder and honorary chairman of Sony Corporation, Masaru Ibuka. 2018 Ibuka award was conferred to Linus Torvalds For his leadership of the development and proliferation of Linux\n\n")
        print("2014                         IEEE Computer Pioneer Award                                     On 23 April 2014, the Institute of Electrical and Electronics Engineers named Torvalds as the 2014 recipient of the IEEE Computer Society's Computer Pioneer Award. The Computer Pioneer Award was established in 1981 by the IEEE Computer Society Board of Governors to recognize and honor the vision of those whose efforts resulted in the creation and continued vitality of the computer industry. The award is presented to outstanding individuals whose main contribution to the concepts and development of the computer field was made at least 15 years earlier\n\n")
        print("2012                         Internet Hall of Fame                                           On 23 April 2012, at Internet Society's Global INET conference in Geneva, Switzerland, Torvalds was one of the inaugural inductees into the Internet Hall of Fame, one of ten in the Innovators category and thirty-three overall inductees\n\n")
        print("2012                         Millennium Technology Prize                                     On 20 April 2012, Torvalds was declared one of two winners of that year's Millennium Technology Prize,[59] along with Shinya Yamanaka.[60] The honor is widely described as technology's equivalent of the Nobel Prize.\n\n")
        print("2010                         C&C Prize                                                       He was awarded the C&C Prize by the NEC Corporation in 2010 for contributions to the advancement of the information technology industry, education, research, and the improvement of our lives\n\n")
        print("2008                         Hall of Fellows                                                 In 2008, he was inducted into the Hall of Fellows of the Computer History Museum in Mountain View, California, for the creation of the Linux kernel and the management of open source development of the widely used Linux operating system.\n\n")
        print("2005                         Vollum Award                                                    In August 2005, Torvalds received the Vollum Award from Reed College.\n\n")
        print("2003                         Linus (Moon)                                                    In 2003, the naming of the asteroid moon Linus was motivated in part by the fact that the discoverer was an enthusiastic Linux user. Although the naming proposal referred to the mythological Linus, son of the muse Calliope and the inventor of melody and rhythm, the name was also meant to honor Linus Torvalds, and Linus van Pelt, a character in the Peanuts comic strip\n\n")
        print("2001                         Takeda Award                                                    In 2001, he shared the Takeda Award for Social/Economic Well-Being with Richard Stallman and Ken Sakamura.\n\n")
        print("2000                         Lovelace Medal                                                  In 2000, he was awarded the Lovelace Medal from the British Computer Society\n\n")
        print("1998                         EFF Pioneer Award                                               In 1998, Torvalds received an EFF Pioneer Award.\n\n")
        print("1997                         Academic Honors                                                 In 1997, Torvalds received his master's degree (Laudatur Grade) from the Department of Computer Science at the University of Helsinki. Two years later he received honorary doctor status at Stockholm University, and in 2000, he received the same honor from his alma mater.University of Helsinki has named an auditorium after Torvalds and his computer is on display at the Department of Computer Science.\n\n")
        print("1996                         9793 Torvalds (Asteroid)                                        In 1996, the asteroid 9793 Torvalds was named after him\n\n")
    def About_Linux(self):
        print("Linux  is a family of open-source Unix-like operating systems based on the Linux kernel,")
        print(" an operating system kernel first released on September 17, 1991, by Linus Torvalds.")
        print(" Linux is typically packaged as a Linux distribution, which includes the kernel and ")
        print("supporting system software and libraries, many of which are provided by the GNU Project.")
        print(" Many Linux distributions use the word 'Linux' in their name, ")
        print("but the Free Software Foundation uses the name 'GNU/Linux' to emphasize the importance of GNU software,")
        print(" causing some controversy.\n")
        print("Popular Linux distributions include Debian, Fedora Linux, and Ubuntu, the latter of which itself consists of")
        print(" many different distributions and modifications, including Lubuntu and Xubuntu. Commercial distributions include Red Hat Enterprise Linux and SUSE Linux Enterprise.")
        print("Desktop Linux distributions include a windowing system such as X11 or Wayland, and a desktop environment such as GNOME or KDE Plasma.")
        print("Distributions intended for servers may omit graphics altogether, or include a solution stack such as LAMP. Because Linux is freely redistributable,")
        print("anyone may create a distribution for any purpose.")
        print("Linux was originally developed for personal computers based on the Intel x86 architecture,")
        print("but has since been ported to more platforms than any other operating system. Because of the dominance of the Linux-based Android on smartphones,")
        print("Linux, including Android, has the largest installed base of all general-purpose operating systems, as of May 2022.")
        print("Although Linux is, as of November 2022, used by only around 2.6 percent of desktop computers,")
        print("the Chromebook, which runs the Linux kernel-based ChromeOS, dominates the US K–12 education market and represents nearly 20 percent of sub-$300 notebook sales in the US.")
        print("Linux is the leading operating system on servers (over 96.4% of the top 1 million web servers' operating systems are Linux),")
        print("leads other big iron systems such as mainframe computers, ")
        print("and is used on all of the world's 500 fastest supercomputers[d] (since November 2017, having gradually displaced all competitors).")
        print("Linux also runs on embedded systems, i.e. devices whose operating system is typically built into the firmware and is highly tailored to the system.")
        print("This includes routers, automation controls, smart home devices, video game consoles,televisions (Samsung and LG Smart TVs),")
        print("automobiles (Tesla, Audi, Mercedes-Benz, Hyundai and Toyota),and spacecraft (Falcon 9 rocket, Dragon crew capsule and the Perseverance rover).")
        print("Linux is one of the most prominent examples of free and open-source software collaboration.")
        print("The source code may be used, modified and distributed commercially or non-commercially by")
        print("anyone under the terms of its respective licenses, such as the GNU General Public License (GPL). The Linux kernel, for example, is licensed under the GPLv2.")
    def Design(self):
        print("Many open source developers agree that the Linux kernel was not designed but rather evolved through") 
        print("natural selection. Torvalds considers that although the design of Unix served as a scaffolding, ")
        print("Linux grew with a lot of mutations – and because the mutations were less than random, they were ")
        print("faster and more directed than alpha-particles in DNA. Eric S. Raymond considers Linux's revolutionary") 
        print("aspects to be social, not technical: before Linux, complex software was designed carefully by small groups,")
        print("Linux evolved in a completely different way. From nearly the beginning, it was rather casually hacked on by ")
        print("huge numbers of volunteers coordinating only through the Internet. Quality was maintained not by rigid ")
        print("standards or autocracy but by the naively simple strategy of releasing every week and getting feedback from") 
        print("hundreds of users within days, creating a sort of rapid Darwinian selection on the mutations introduced by ")
        print("developers.Bryan Cantrill, an engineer of a competing OS, agrees that Linux wasn't designed, it evolved,")
        print("but considers this to be a limitation, proposing that some features, especially those related to security,")
        print(" cannot be evolved into, this is not a biological system at the end of the day, it's a software system.A Linux-based") 
        print("system is a modular Unix-like operating system, deriving much of its basic design from principles established ")
        print("in Unix during the 1970s and 1980s. Such a system uses a monolithic kernel, the Linux kernel, which handles ")
        print("process control, networking, access to the peripherals, and file systems. Device drivers are either integrated") 
        print("directly with the kernel, or added as modules that are loaded while the system is running.")
    def User_interface(self):
        print("The user interface, also known as the shell, is either a command-line interface (CLI), a graphical user interface (GUI), or controls attached to the")
        print(" associated hardware, which is common for embedded systems. For desktop systems, the default user interface is usually graphical, although the CLI is ")
        print("commonly available through terminal emulator windows or on a separate virtual console.")
        print("\n")
        print("CLI shells are text-based user interfaces, which use text for both input and output. The dominant shell used ")
        print("in Linux is the Bourne-Again Shell (bash), originally developed for the GNU project. Most low-level Linux components"), 
        print("including various parts of the userland, use the CLI exclusively. The CLI is particularly suited for automation of ")
        print("repetitive or delayed tasks and provides very simple inter-process communication.")
        print("\n")
        print("On desktop systems, the most popular user interfaces are the GUI shells, packaged together with extensive desktop environments, ")
        print("such as KDE Plasma, GNOME, MATE, Cinnamon, LXDE, Pantheon and Xfce, though a variety of additional user interfaces exist.") 
        print("Most popular user interfaces are based on the X Window System, often simply called 'X'. ")
        print("It provides network transparency and permits a graphical application running on one system to be displayed on") 
        print("another where a user may interact with the application; however, certain extensions of the X ,")
        print("Window System are not capable of working over the network.[79] Several X display servers exist, with the reference implementation, ")
        print("X.Org Server, being the most popular.")
        print("\n")
        print("Server distributions might provide a command-line interface for developers and administrators, but provide a custom interface towards end-users, ")
        print("designed for the use-case of the system. This custom interface is accessed through a client that resides on another system, not necessarily Linux based.")
        print("\n")
        print("Several types of window managers exist for X11, including tiling, dynamic, stacking and compositing. ")
        print("Window managers provide means to control the placement and appearance of individual application windows, and") 
        print("interact with the X Window System. Simpler X window managers such as dwm, ratpoison, i3wm, or") 
        print("herbstluftwm provide a minimalist functionality, while more elaborate window managers such as FVWM, Enlightenment or") 
        print("Window Maker provide more features such as a built-in taskbar and themes, but are still lightweight when compared to desktop environments.") 
        print("Desktop environments include window managers as part of their standard installations, such as Mutter (GNOME), KWin (KDE) or Xfwm (xfce),")
        print(" although users may choose to use a different window manager if preferred.")
        print("\n")
        print("Wayland is a display server protocol intended as a replacement for the X11 protocol; as of 2022, it has received relatively wide adoption.[80] Unlike X11,") 
        print("Wayland does not need an external window manager and compositing manager. Therefore, a Wayland compositor takes the role of the display server,") 
        print("window manager and compositing manager. Weston is the reference implementation of Wayland, while GNOME's Mutter and KDE's KWin are being ported to Wayland as") 
        print("standalone display servers. Enlightenment has already been successfully ported since version 19")
    
    def Naming(self):
        print("Linus Torvalds had wanted to call his invention 'Freax', a portmanteau of 'free', 'freak', and X (as an allusion to Unix). ")
        print("During the start of his work on the system, some of the project's makefiles included the name Freax for about half a year.")
        print("Initially, Torvalds considered the name Linux but dismissed it as too egotistical")
        print("To facilitate development, the files were uploaded to the FTP server  of FUNET in September 1991. ")
        print("Ari Lemmke, Torvalds' coworker at the Helsinki University of Technology (HUT) who was one of the volunteer administrators for the FTP server at the time,")
        print("did not think that 'Freax' was a good name, so he named the project 'Linux' on the server without consulting Torvalds.")
        print("Later, however, Torvalds consented to 'Linux'.")
        print("According to a newsgroup post by Torvalds,the word 'Linux' should be pronounced  with a short 'i' as in 'print' and 'u' as in 'put'. To further demonstrate how the word 'Linux' should be pronounced,")
        print("he included an audio guide  with the kernel source code. However, in this recording,")
        print("he pronounces 'Linux' with a short but close front unrounded vowel.")
    def Development(self):
        print("The primary difference between Linux and many other popular contemporary operating systems is that the Linux kernel and ")
        print("other components are free and open-source software. Linux is not the only such operating system,")
        print(" although it is by far the most widely used.[85] Some free and open-source software licenses are based on the principle of copyleft,") 
        print("a kind of reciprocity: any work derived from a copyleft piece of software must also be copyleft itself.") 
        print("The most common free software license, the GNU General Public License (GPL), is a form of copyleft,") 
        print("and is used for the Linux kernel and many of the components from the GNU Project.")
    def Hardware_support(self):
        print("The Linux kernel is a widely ported operating system kernel, available for devices ranging from mobile phones to supercomputers; ")
        print("it runs on a highly diverse range of computer architectures, including the hand-held ARM-based iPAQ and the IBM mainframes System z9 or System z10.")
        print("Specialized distributions and kernel forks exist for less mainstream architectures; for example, the ELKS kernel fork can run on Intel 8086 or Intel 80286 16-bit microprocessors, ")
        print("while the µClinux kernel fork may run on systems without a memory management unit. ")
        print("The kernel also runs on architectures that were only ever intended to use a manufacturer-created operating system, ")
        print("such as Macintosh computers[101][102] (with both PowerPC and Intel processors), PDAs, video game consoles, portable music players, and mobile phones.")
        print("Linux has a reputation of supporting old hardware very well by maintaining standardized drivers for a long time.")
        print(" There are several industry associations and hardware conferences devoted to maintaining and improving support for diverse hardware under Linux,")
        print(" such as FreedomHEC. Over time, support for different hardware has improved in Linux, resulting in any off-the-shelf purchase having a 'good chance' of being compatible.")
        print("In 2014, a new initiative was launched to automatically collect a database of all tested hardware configurations")
    def Video_input_infrastructure(self):
        print("Linux currently has two modern kernel-userspace APIs for handling video input devices: V4L2 API for video streams and radio, and DVB API for digital TV reception.")
        print("Due to the complexity and diversity of different devices, and due to the large number of formats and standards handled by those APIs, ")
        print("this infrastructure needs to evolve to better fit other devices. Also, a good userspace device library is the key of the success for having")
        print(" userspace applications to be able to work with all formats supported by those devices")
        
        
    def About_Linux_Kernal(self):
        print("The Linux kernel is a free and open-source,[11] monolithic, modular, multitasking, Unix-like operating system kernel. It was originally authored in 1991 by Linus Torvalds for his i386-based PC,")
        print("and it was soon adopted as the kernel for the GNU operating system, which was written to be a free (libre) replacement for Unix.")
        print("Linux is provided under the GNU General Public License version 2 only, but it contains files under other compatible licenses.")
        print("Since the late 1990s, it has been included as part of a large number of operating system distributions, many of which are commonly also called Linux.")
        print("Linux is deployed on a wide variety of computing systems, such as embedded devices, mobile devices (including its use in the Android operating system), personal computers, servers, mainframes, and supercomputers.")
        print("It can be tailored for specific architectures and for several usage scenarios using a family of simple commands (that is, without the need of manually editing its source code before compilation);")
        print("privileged users can also fine-tune kernel parameters at runtime.")
        print("Most of the Linux kernel code is written using the GNU extensions of GCC to the standard C programming language and")
        print("with the use of architecture-specific instructions (ISA) in limited parts of the kernel. ")
        print("This produces a highly optimized executable (vmlinux) with respect to utilization of memory space and task execution times.")
        print("Day-to-day development discussions take place on the Linux kernel mailing list (LKML). Changes are tracked using the version control system git, ")
        print("which was originally authored by Torvalds as a free software replacement for BitKeeper.")
    def Desc_Internal_Command(self):
        print("Internal Commands :")
        print("Commands which are built into the shell. For all the shell built-in commands, execution of the same is fast in the sense that the shell doesn’t have to search the given path for them in the PATH variable,")
        print("and also no process needs to be spawned for executing it.")
        print("Examples: source, cd, fg, etc.")
    def Desc_External_Command(self):
        print("External Commands :")
        print("Commands which aren’t built into the shell. When an external command has to be executed, the shell looks for its path given in the PATH variable,")
        print("and also a new process has to be spawned and the command gets executed. They are usually located in /bin or /usr/bin. ")
        print("For example, when you execute the “cat” command, which usually is at /usr/bin, the executable /usr/bin/cat gets executed.")
        print("Examples: ls, cat etc.")
    def Desc_Included_Command(self):
        print("Included_Command :")
        print("When you create a user command you give it a name (which must be unique and not clash with any of the Opus commands),")
        print("other buttons can then run your user command using its name.")
        print("User commands can also accept parameters (arguments) on the command line, which lets you pass through parameters to external programs or scripts that your user command might invoke.")