"use strict";(self.webpackChunkjupysql_plugin=self.webpackChunkjupysql_plugin||[]).push([[555],{555:(e,t,o)=>{o.r(t),o.d(t,{default:()=>E});var n,l=o(765),a=o(679),u=o(68);class s extends u.DataConnector{constructor(e){super(),this._connectors=e}fetch(e){return Promise.all(this._connectors.map((t=>t.fetch(e)))).then((e=>{const t=e.filter((e=>!!e));return n.mergeReplies(t)}))}}!function(e){e.mergeReplies=function(e){const t=e.filter((e=>e.matches.length>0));if(0===t.length)return e[0];if(1===t.length)return t[0];const o=new Set;return t.forEach((e=>{e.matches.forEach((e=>o.add(e)))})),{...t[0],matches:[...o]}}}(n||(n={}));const v=JSON.parse('{"H":[{"value":"ADD"},{"value":"ADD CONSTRAINT"},{"value":"ALL"},{"value":"ALTER"},{"value":"ALTER COLUMN"},{"value":"ALTER TABLE"},{"value":"AND"},{"value":"ANY"},{"value":"AS"},{"value":"ASC"},{"value":"BACKUP DATABASE"},{"value":"BETWEEN"},{"value":"CASE"},{"value":"CHECK"},{"value":"COLUMN"},{"value":"CONSTRAINT"},{"value":"CREATE"},{"value":"CREATE DATABASE"},{"value":"CREATE INDEX"},{"value":"CREATE OR REPLACE VIEW"},{"value":"CREATE TABLE"},{"value":"CREATE PROCEDURE"},{"value":"CREATE UNIQUE INDEX"},{"value":"CREATE VIEW"},{"value":"DATABASE"},{"value":"DEFAULT"},{"value":"DELETE"},{"value":"DESC"},{"value":"DISTINCT"},{"value":"DROP"},{"value":"DROP COLUMN"},{"value":"DROP CONSTRAINT"},{"value":"DROP DATABASE"},{"value":"DROP DEFAULT"},{"value":"DROP INDEX"},{"value":"DROP TABLE"},{"value":"DROP VIEW"},{"value":"EXEC"},{"value":"EXISTS"},{"value":"FOREIGN KEY"},{"value":"FROM"},{"value":"FULL OUTER JOIN"},{"value":"GROUP BY"},{"value":"HAVING"},{"value":"IN"},{"value":"INDEX"},{"value":"INNER JOIN"},{"value":"INSERT INTO"},{"value":"INSERT INTO SELECT"},{"value":"IS NULL"},{"value":"IS NOT NULL"},{"value":"JOIN"},{"value":"LEFT JOIN"},{"value":"LIKE"},{"value":"LIMIT"},{"value":"NOT"},{"value":"NOT NULL"},{"value":"OR"},{"value":"ORDER BY"},{"value":"OUTER JOIN"},{"value":"PRIMARY KEY"},{"value":"PROCEDURE"},{"value":"RIGHT JOIN"},{"value":"ROWNUM"},{"value":"SELECT"},{"value":"SELECT DISTINCT"},{"value":"SELECT INTO"},{"value":"SELECT TOP"},{"value":"SET"},{"value":"TABLE"},{"value":"TOP"},{"value":"TRUNCATE TABLE"},{"value":"UNION"},{"value":"UNION ALL"},{"value":"UNIQUE"},{"value":"UPDATE"},{"value":"VALUES"},{"value":"VIEW"},{"value":"WHERE"}]}');class i extends u.DataConnector{constructor(e){super(),this._editor=e.editor,this._sessionContext=e.sessionContext}fetch(e){return this._editor?new Promise((e=>{e(c.completionHint(this._editor,this._sessionContext))})):Promise.reject("No editor")}}var c,r;!function(e){e.completionHint=function(e,t){const o=e.getCursorPosition(),n=e.getTokenForPosition(o),l=v.H.filter((e=>e.value.startsWith(n.value.toUpperCase()))).map((e=>e.value)),a=Array.from(new Set(l));return{start:n.offset,end:n.offset+n.value.length,matches:a,metadata:{}}}}(c||(c={})),function(e){e.invoke="completer:invoke",e.invokeNotebook="completer:invoke-notebook",e.select="completer:select",e.selectNotebook="completer:select-notebook"}(r||(r={}));const E={id:"completer",autoStart:!0,requires:[l.ICompletionManager,a.INotebookTracker],activate:async(e,t,o)=>{console.log("JupyterLab custom completer extension is activated!"),o.widgetAdded.connect(((e,o)=>{var n,a;let u=null!==(a=null===(n=o.content.activeCell)||void 0===n?void 0:n.editor)&&void 0!==a?a:null;const v=o.sessionContext.session,c=o.sessionContext,r={session:v,editor:u,sessionContext:c},E=new s([]),T=t.register({connector:E,editor:u,parent:o}),d=()=>{var e,t;u=null!==(t=null===(e=o.content.activeCell)||void 0===e?void 0:e.editor)&&void 0!==t?t:null,r.session=o.sessionContext.session,r.sessionContext=o.sessionContext,r.editor=u,T.editor=u;const n=new l.KernelConnector(r),a=new l.ContextConnector(r),v=new i(r);T.connector=new s([n,a,v])};o.content.activeCellChanged.connect(d),o.sessionContext.sessionChanged.connect(d)})),e.commands.addCommand(r.invokeNotebook,{execute:()=>{var t;const n=o.currentWidget;if(n&&"code"===(null===(t=n.content.activeCell)||void 0===t?void 0:t.model.type))return e.commands.execute(r.invoke,{id:n.id})}}),e.commands.addCommand(r.selectNotebook,{execute:()=>{const t=o.currentWidget&&o.currentWidget.id;if(t)return e.commands.execute(r.select,{id:t})}}),e.commands.addKeyBinding({command:r.selectNotebook,keys:["Enter"],selector:".jp-Notebook .jp-mod-completer-active"})}}}}]);