# generated by datamodel-codegen:
#   filename:  metadataIngestion/objectstoreServiceMetadataPipeline.json
#   timestamp: 2023-03-30T09:54:39+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Extra, Field

from ..type import filterPattern


class ObjectstoreMetadataConfigType(Enum):
    ObjectStoreMetadata = 'ObjectStoreMetadata'


class ObjectStoreServiceMetadataPipeline(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[ObjectstoreMetadataConfigType] = Field(
        ObjectstoreMetadataConfigType.ObjectStoreMetadata, description='Pipeline type'
    )
    containerFilterPattern: Optional[filterPattern.FilterPattern] = Field(
        None, description='Regex to only fetch containers that matches the pattern.'
    )
